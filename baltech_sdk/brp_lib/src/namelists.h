//This file was generated by generate_namelists.py.
//DO NOT MODIFY MANUALLY!


static brp_errcode errcodes[] = {
	0x00000000, 0x0000FFFF, 0x00010000, 0x00010001, 0x00010002, 0x00010003, 
	0x00010004, 0x00010005, 0x00010006, 0x00010007, 0x00010008, 0x00010009, 
	0x0001000A, 0x0001000B, 0x0001000C, 0x0001007F, 0x00010101, 0x00010102, 
	0x00010103, 0x00010104, 0x00010105, 0x00010106, 0x00010107, 0x00010108, 
	0x00010109, 0x0001010A, 0x0001010B, 0x0001010C, 0x0001010D, 0x00010201, 
	0x00010202, 0x00010203, 0x00010204, 0x00010205, 0x00010301, 0x00010302, 
	0x00010303, 0x00010304, 0x00010305, 0x00010306, 0x00010307, 0x00010401, 
	0x00010402, 0x00010501, 0x00010502, 0x00010503, 0x00010504, 0x00010510, 
	0x00010701, 0x00010702, 0x00010801, 0x00010802, 0x00010901, 0x00010902, 
	0x00010903, 0x00010904, 0x00010905, 0x00010906, 0x00010A01, 0x00010B01, 
	0x00010B02, 0x00010B03, 0x00010B04, 0x00010B05, 0x00010B06, 0x00011001, 
	0x00011002, 0x00011004, 0x00011005, 0x00011006, 0x00011008, 0x00011009, 
	0x0001100A, 0x0001100B, 0x0001100C, 0x0001100E, 0x0001100F, 0x00011010, 
	0x00011011, 0x00011012, 0x00011013, 0x00011015, 0x00011016, 0x00011017, 
	0x00011018, 0x0001101A, 0x0001101D, 0x0001101E, 0x0001101F, 0x00011020, 
	0x00011021, 0x00011022, 0x00011023, 0x00011101, 0x00011102, 0x00011103, 
	0x00011104, 0x00011105, 0x00011106, 0x00011107, 0x00011108, 0x00011109, 
	0x0001110A, 0x00011201, 0x00011202, 0x00011203, 0x00011204, 0x00011205, 
	0x00011301, 0x00011302, 0x00011304, 0x00011306, 0x00011307, 0x00011308, 
	0x00011310, 0x00011321, 0x00011322, 0x00011323, 0x00011330, 0x00011401, 
	0x00011402, 0x00011403, 0x00011404, 0x00011407, 0x00011408, 0x00011410, 
	0x00011421, 0x00011422, 0x00011423, 0x00011424, 0x00011601, 0x00011604, 
	0x00011605, 0x00011610, 0x00011623, 0x00011A01, 0x00011A02, 0x00011A04, 
	0x00011A07, 0x00011A08, 0x00011A10, 0x00011A22, 0x00011A23, 0x00011B01, 
	0x00011B03, 0x00011B04, 0x00011B05, 0x00011B06, 0x00011B07, 0x00011B08, 
	0x00011B09, 0x00011B0A, 0x00011B0B, 0x00011B0C, 0x00011B0D, 0x00011B0F, 
	0x00011B10, 0x00011B11, 0x00011B12, 0x00011B13, 0x00011B1C, 0x00011B20, 
	0x00011B21, 0x00011B22, 0x00011B23, 0x00011B24, 0x00011B25, 0x00011B27, 
	0x00011B28, 0x00011B29, 0x00011B2A, 0x00011B2B, 0x00011B2C, 0x00011B2D, 
	0x00011B2E, 0x00011B2F, 0x00011B30, 0x00011B32, 0x00011B33, 0x00011B34, 
	0x00011C01, 0x00011C04, 0x00011C07, 0x00011C10, 0x00011C22, 0x00011C23, 
	0x00011E01, 0x00011E02, 0x00011E03, 0x00012101, 0x00012102, 0x00012104, 
	0x00012105, 0x00012110, 0x00012120, 0x00012123, 0x00012124, 0x00012125, 
	0x00012126, 0x00012201, 0x00012204, 0x00012210, 0x00012220, 0x00012401, 
	0x00012403, 0x00012404, 0x00012405, 0x00012406, 0x00012407, 0x00012408, 
	0x00012501, 0x00012502, 0x00012503, 0x00012504, 0x00012505, 0x00012518, 
	0x00012519, 0x00012520, 0x00012521, 0x00012528, 0x00013001, 0x00013002, 
	0x00013003, 0x00013004, 0x00013007, 0x00013008, 0x00013009, 0x0001300A, 
	0x0001300B, 0x0001300C, 0x0001300D, 0x0001300F, 0x00013101, 0x00013103, 
	0x00013104, 0x00013105, 0x00013106, 0x00013107, 0x00013108, 0x00013109, 
	0x0001310A, 0x0001310B, 0x0001310D, 0x00013301, 0x00013303, 0x00013305, 
	0x00013307, 0x00013308, 0x00013309, 0x0001330B, 0x0001330C, 0x00013401, 
	0x00013403, 0x00013407, 0x00013408, 0x00013409, 0x0001340A, 0x0001340C, 
	0x00013501, 0x00013503, 0x00013505, 0x00013507, 0x00013508, 0x00013509, 
	0x0001350B, 0x00013601, 0x00013603, 0x00013605, 0x00013607, 0x00013608, 
	0x00013609, 0x0001360B, 0x00014002, 0x00014010, 0x00014020, 0x00014021, 
	0x00014022, 0x00014031, 0x00014101, 0x00014102, 0x00014103, 0x00014104, 
	0x00014105, 0x00014106, 0x00014107, 0x00014401, 0x00014402, 0x00014403, 
	0x00014404, 0x00014405, 0x00014406, 0x00014407, 0x00014420, 0x00014501, 
	0x00014502, 0x00014503, 0x00014690, 0x00014701, 0x00014702, 0x00014704, 
	0x00014707, 0x00014708, 0x00014710, 0x00014711, 0x0001473F, 0x00014801, 
	0x00014802, 0x00014803, 0x00014804, 0x00014805, 0x00014806, 0x00014901, 
	0x00014902, 0x00014903, 0x00014904, 0x00014905, 0x00014906, 0x00014907, 
	0x00014908, 0x00014A01, 0x00014A02, 0x00014A03, 0x00014A04, 0x00014A05, 
	0x00014A06, 0x00014A07, 0x00014B01, 0x00014C01, 0x00014C02, 0x00014C03, 
	0x00014C04, 0x00014C05, 0x00014D01, 0x00014D03, 0x00014D04, 0x0001A001, 
	0x0001A002, 0x0001A005, 0x0001A006, 0x0001A007, 0x0001A008, 0x0001A00B, 
	0x0001A00C, 0x0001A00D, 0x0001A013, 0x0001A015, 0x0001A016, 0x0001A501, 
	0x0001A502, 0x0001A503, 0x0001A601, 0x0001A602, 0x0001A603, 0x0001A604, 
	0x0001E001, 0x0001E002, 0x0001E003, 0x0001E004, 0x0001E005, 0x0001E006, 
	0x0001E011, 0x0001E012, 0x0001E013, 0x0001E020, 0x0001E021, 0x0001E022, 
	0x0001E023, 0x0001E024, 0x0001E025, 0x0001E030, 0x0001E031, 0x0001E050, 
	0x0001E051, 0x0001F001, 0x0001F002, 0x0001F010, 0x0001F011, 0x0001F012, 
	0x0001F013, 0x0001F014, 0x0001F015, 0x0001F016, 0x0001F017, 0x0001F018, 
	0x0001F019, 0x0001F01A, 0x0001F01B, 0x0001F301, 0x00800000, 0x00800020, 
	0x01000000, 0x01000014, 0x01000015, 0x01000016, 0x01000017, 0x01000018, 
	0x01000019, 0x01000021, 0x01000027, 0x02000000, 0x02000002, 0x02000023, 
	0x04000000, 0x04000003, 0x04000009, 0x0400000F, 0x04000010, 0x04000011, 
	0x04000012, 0x04000022, 0x08000000, 0x0F800000, 0x10000000, 0x10000004, 
	0x10000006, 0x10000007, 0x10000008, 0x10000024, 0x10000025, 0x20000000, 
	0x20000001, 0x20000005, 0x20000013, 0x40000000, 0x4000000A, 0x4000000B, 
	0x4000000C, 0x4000000D, 0x4000000E, 0x40000026, 0x80000000, 0xF0000000, 
	0xFFFF0000, 
};


static char * ec_names[] = {
	"BRP_OK", "BRP_ERRMASK_CODE", "BRP_ERRGRP_DEVICE", "BRP_Sys_ErrCfgFull", 
	"BRP_Sys_ErrCfgAccess", "BRP_Sys_ErrCfgNotFound", 
	"BRP_Sys_ErrInvalidCfgBlock", "BRP_Sys_ErrCfgAccessDenied", 
	"BRP_Sys_ErrRegAccess", "BRP_Sys_ErrInvalidProtocol", 
	"BRP_Sys_ErrNotSupportedByHardware", "BRP_Sys_ErrFactsetRestore", 
	"BRP_Sys_ErrCfgConfigSecurityCode", "BRP_Sys_ErrCfgVersion", 
	"BRP_Sys_ErrCfgLoadWrongState", "BRP_Sys_ErrInvalidFwCrc", 
	"BRP_VHL_ErrNoTag", "BRP_VHL_ErrCardNotSelected", "BRP_VHL_ErrHf", 
	"BRP_VHL_ErrConfig", "BRP_VHL_ErrAuth", "BRP_VHL_ErrRead", 
	"BRP_VHL_ErrWrite", "BRP_VHL_ConfcardRead", "BRP_VHL_ErrInvalidCardType", 
	"BRP_VHL_ErrNotSupported", "BRP_VHL_ErrFormat", "BRP_VHL_ErrHw", 
	"BRP_VHL_ErrApdu", "BRP_Crypto_CrptErrInvalidBlock", 
	"BRP_Crypto_CrptErrAuth", "BRP_Crypto_CrptErrKeyNotFound", 
	"BRP_Crypto_CrptErrWriteConfigkey", "BRP_Crypto_CrptErrInvalidKey", 
	"BRP_Ftob_ErrInvalidFilename", "BRP_Ftob_ErrFileAccessDenied", 
	"BRP_Ftob_ErrWriteBlock", "BRP_Ftob_ErrReadBlock", 
	"BRP_Ftob_ErrNoFileActive", "BRP_Ftob_ErrOutOfMemory", 
	"BRP_Ftob_ErrBroken", "BRP_Rtc_ErrHardware", "BRP_Rtc_ErrVoltageLow", 
	"BRP_AR_ErrNoMessage", "BRP_AR_ErrScriptRuntime", 
	"BRP_AR_ErrScriptSyntax", "BRP_AR_ErrScriptNotImplemented", 
	"BRP_AR_ErrArDisabled", "BRP_Sec_ErrCrypto", "BRP_Sec_ErrTunnel", 
	"BRP_I2c_ErrI2CRead", "BRP_I2c_ErrI2CWrite", "BRP_Pki_ErrCrypto", 
	"BRP_Pki_ErrTunnel", "BRP_Pki_ErrCert", "BRP_Pki_ErrSeqctr", 
	"BRP_Pki_ErrSeclevelUnsupported", "BRP_Pki_ErrSessionTimeout", 
	"BRP_UI_ErrInvalidPort", "BRP_Lic_ErrNoLicCard", "BRP_Lic_ErrAccess", 
	"BRP_Lic_ErrNotSupported", "BRP_Lic_ErrAlreadyActive", 
	"BRP_Lic_ErrNoFreeLicense", "BRP_Lic_ErrActivation", "BRP_Mif_ErrNoTag", 
	"BRP_Mif_ErrCrc", "BRP_Mif_ErrAuth", "BRP_Mif_ErrParity", 
	"BRP_Mif_ErrCode", "BRP_Mif_ErrSnr", "BRP_Mif_ErrKey", 
	"BRP_Mif_ErrNotauth", "BRP_Mif_ErrBitcount", "BRP_Mif_ErrBytecount", 
	"BRP_Mif_VcsAndProxCheckError", "BRP_Mif_ErrWrite", "BRP_Mif_ErrInc", 
	"BRP_Mif_ErrDecr", "BRP_Mif_ErrRead", "BRP_Mif_ErrOvfl", 
	"BRP_Mif_ErrFraming", "BRP_Mif_ErrBreak", "BRP_Mif_ErrCmd", 
	"BRP_Mif_ErrColl", "BRP_Mif_ErrReaderChipCommunication", 
	"BRP_Mif_ErrFirmwareNotSupported", "BRP_Mif_ErrVal", 
	"BRP_Mif_ErrIntegrity", "BRP_Mif_CondNotvalid", 
	"BRP_Mif_ErrHwNotSupported", "BRP_Mif_ErrSamUnlock", 
	"BRP_Mif_ErrSamCommunication", "BRP_Lg_ErrNomim", "BRP_Lg_ErrInvalidCmd", 
	"BRP_Lg_ErrAccessDenied", "BRP_Lg_ErrHf", "BRP_Lg_ErrDataCorrupt", 
	"BRP_Lg_ErrCrc", "BRP_Lg_ErrCommunication", "BRP_Lg_ErrMimCorrupt", 
	"BRP_Lg_ErrBusy", "BRP_Lg_NotInitialized", "BRP_Lga_ErrNotag", 
	"BRP_Lga_ErrLegic", "BRP_Lga_ErrCommunication", 
	"BRP_Lga_ErrNotInitialized", "BRP_Lga_ErrNotAssembled", 
	"BRP_Iso14a_ErrNoTag", "BRP_Iso14a_ErrCollision", "BRP_Iso14a_ErrHf", 
	"BRP_Iso14a_ErrKey", "BRP_Iso14a_ErrFrame", "BRP_Iso14a_ErrCrc", 
	"BRP_Iso14a_ErrCom", "BRP_Iso14a_ErrEeprom", 
	"BRP_Iso14a_ErrCardNotSupported", "BRP_Iso14a_ErrHwNotSupported", 
	"BRP_Iso14a_BreakErr", "BRP_Iso14b_ErrNoTag", "BRP_Iso14b_ErrCollision", 
	"BRP_Iso14b_ErrAuth", "BRP_Iso14b_ErrHf", "BRP_Iso14b_ErrFrame", 
	"BRP_Iso14b_ErrCrc", "BRP_Iso14b_ErrCom", "BRP_Iso14b_ErrEeprom", 
	"BRP_Iso14b_ErrCardNotSupported", "BRP_Iso14b_ErrMem", 
	"BRP_Iso14b_ErrHwNotSupported", "BRP_Iso14L4_ErrNoTag", 
	"BRP_Iso14L4_ErrHf", "BRP_Iso14L4_ErrCard", "BRP_Iso14L4_ErrCom", 
	"BRP_Iso14L4_ErrCmd", "BRP_Pico_ErrNoTag", "BRP_Pico_ErrCollision", 
	"BRP_Pico_ErrHf", "BRP_Pico_ErrFrame", "BRP_Pico_ErrCrc", 
	"BRP_Pico_ErrCom", "BRP_Pico_ErrCardNotSupported", 
	"BRP_Pico_ErrHwNotSupported", "BRP_Desfire_ErrIso14NoTag", 
	"BRP_Desfire_ErrBreak", "BRP_Desfire_ErrIso14Hf", 
	"BRP_Desfire_ErrIso14CardInvalid", 
	"BRP_Desfire_ErrReaderChipCommunication", "BRP_Desfire_ErrIso14ApduCmd", 
	"BRP_Desfire_ErrIso14InvalidResponse", "BRP_Desfire_ErrPcdAuthentication", 
	"BRP_Desfire_ErrIntegrity", "BRP_Desfire_ErrPcdKey", 
	"BRP_Desfire_ErrNoChanges", "BRP_Desfire_ErrPcdParam", 
	"BRP_Desfire_VcsAndProxCheckError", "BRP_Desfire_ErrFirmwareNotSupported", 
	"BRP_Desfire_ErrSamCommunication", "BRP_Desfire_ErrSamUnlock", 
	"BRP_Desfire_ErrHardwareNotSupported", "BRP_Desfire_ErrIllegalCmdLegacy", 
	"BRP_Desfire_ErrLength", "BRP_Desfire_ErrPermissionDenied", 
	"BRP_Desfire_ErrParameter", "BRP_Desfire_ErrAppNotFound", 
	"BRP_Desfire_ErrAppIntegrity", "BRP_Desfire_ErrAuthentication", 
	"BRP_Desfire_ErrBoundary", "BRP_Desfire_ErrPiccIntegrity", 
	"BRP_Desfire_ErrCommandAborted", "BRP_Desfire_ErrPiccDisabled", 
	"BRP_Desfire_ErrCount", "BRP_Desfire_ErrDuplicate", 
	"BRP_Desfire_ErrEeprom", "BRP_Desfire_ErrFileNotFound", 
	"BRP_Desfire_ErrFileIntegrity", "BRP_Desfire_ErrNoSuchKey", 
	"BRP_Desfire_ErrOutOfMemory", "BRP_Desfire_ErrIllegalCmd", 
	"BRP_Desfire_ErrCmdOverflow", "BRP_Felica_ErrFelicaNoTag", 
	"BRP_Felica_ErrFelicaHf", "BRP_Felica_ErrFelicaFrame", 
	"BRP_Felica_ErrFelicaCom", "BRP_Felica_ErrFelicaCardNotSupported", 
	"BRP_Felica_ErrFelicaHwNotSupported", "BRP_Legic_ErrCommunication", 
	"BRP_Legic_ErrNotInitialized", "BRP_Legic_ErrNotAssembled", 
	"BRP_Iso15_ErrNoTag", "BRP_Iso15_ErrCollision", "BRP_Iso15_ErrHf", 
	"BRP_Iso15_ErrLabel", "BRP_Iso15_ErrCom", "BRP_Iso15_ErrCmd", 
	"BRP_Iso15_ErrParamNotSupported", "BRP_Iso15_ErrMem", 
	"BRP_Iso15_ErrLabelBlocksize", "BRP_Iso15_ErrHwNotSupported", 
	"BRP_EpcUid_ErrNoTag", "BRP_EpcUid_ErrHf", "BRP_EpcUid_ErrCom", 
	"BRP_EpcUid_ErrCmd", "BRP_Srix_ErrNoTag", "BRP_Srix_ErrFrame", 
	"BRP_Srix_ErrHf", "BRP_Srix_ErrCom", 
	"BRP_Srix_ErrSrixCardtypeNotSupported", "BRP_Srix_ErrHwNotSupported", 
	"BRP_Srix_ErrCmdBreak", "BRP_Ultralight_ErrNoTag", 
	"BRP_Ultralight_ErrAuth", "BRP_Ultralight_ErrHf", "BRP_Ultralight_ErrKey", 
	"BRP_Ultralight_ErrNack", "BRP_Ultralight_ErrInterface", 
	"BRP_Ultralight_ErrCmd", "BRP_Ultralight_ErrHwNotSupported", 
	"BRP_Ultralight_ErrFirmwareNotSupported", "BRP_Ultralight_BreakErr", 
	"BRP_Hitag_ErrHtgNoTag", "BRP_Hitag_ErrHtgCollision", 
	"BRP_Hitag_ErrHtgRxdata", "BRP_Hitag_HtgChecksum", 
	"BRP_Hitag_HtgWrongParam", "BRP_Hitag_ErrHtgOvTo", "BRP_Hitag_ErrHtgAuth", 
	"BRP_Hitag_ErrHtgHw", "BRP_Hitag_ErrHtgCr", "BRP_Hitag_ErrHtgCfg", 
	"BRP_Hitag_ErrHtgHfreqctrl", "BRP_Hitag_ErrHtgHwNotSupported", 
	"BRP_EM_ErrEmNoTag", "BRP_EM_ErrEmRxdata", "BRP_EM_ErrEmChecksum", 
	"BRP_EM_ErrEmParity", "BRP_EM_EmCmdError", "BRP_EM_EmTagtypeNotDetected", 
	"BRP_EM_ErrEmOvTo", "BRP_EM_EmParamError", "BRP_EM_ErrEmHfreqctrl", 
	"BRP_EM_ErrEmHw", "BRP_EM_ErrEmHwNotSupported", "BRP_HID_ErrHidNoTag", 
	"BRP_HID_ErrHidRxdata", "BRP_HID_ErrHidParity", "BRP_HID_ErrHidParam", 
	"BRP_HID_ErrHidHfreqctrl", "BRP_HID_ErrHidHw", 
	"BRP_HID_ErrHidHwNotSupported", "BRP_HID_ErrLicense", 
	"BRP_TTF_ErrTtfNoTag", "BRP_TTF_ErrTtfRxdata", "BRP_TTF_ErrTtfParam", 
	"BRP_TTF_ErrTtfOvTo", "BRP_TTF_ErrTtfHfreqctrl", "BRP_TTF_ErrTtfHw", 
	"BRP_TTF_ErrTtfHwNotSupported", "BRP_QKey_ErrQkeyNoTag", 
	"BRP_QKey_ErrQkeyRxdata", "BRP_QKey_ErrQkeyParity", 
	"BRP_QKey_ErrQkeyParam", "BRP_QKey_ErrQkeyHfreqctrl", 
	"BRP_QKey_ErrQkeyHw", "BRP_QKey_ErrQkeyHwNotSupported", 
	"BRP_ASK_ErrAskNoTag", "BRP_ASK_ErrAskRxdata", "BRP_ASK_ErrAskParity", 
	"BRP_ASK_ErrAskParam", "BRP_ASK_ErrAskHfreqctrl", "BRP_ASK_ErrAskHw", 
	"BRP_ASK_ErrAskHwNotSupported", "BRP_Iso78_ErrInvalidSlot", 
	"BRP_Iso78_ErrAbort", "BRP_Iso78_ErrProtNotSupported", "BRP_Iso78_ErrCom", 
	"BRP_Iso78_ErrHw", "BRP_Iso78_ErrInvalid7816Cmd", 
	"BRP_Disp_DispPageNotFound", "BRP_Disp_DispUnexpectedEop", 
	"BRP_Disp_DispOutOfMem", "BRP_Disp_DispFrameNotFound", 
	"BRP_Disp_DispUnknownCommand", "BRP_Disp_DispStringTooLong", 
	"BRP_Disp_DispInvalidFont", "BRP_UsbHost_UsbhstErrNotconnected", 
	"BRP_UsbHost_UsbhstErrTimeout", "BRP_UsbHost_UsbhstErrNack", 
	"BRP_UsbHost_UsbhstErrStall", "BRP_UsbHost_UsbhstErrTransfer", 
	"BRP_UsbHost_UsbhstErrUnexpectedPkt", 
	"BRP_UsbHost_UsbhstErrBufferoverflow", "BRP_UsbHost_UsbhstErrSetupPipes", 
	"BRP_Eth_ErrNoResultYet", "BRP_Eth_ErrNotConnected", 
	"BRP_Eth_ErrDisabled", "BRP_Bat_ErrSkipped", 
	"BRP_CardEmu_CardemuErrNoTag", "BRP_CardEmu_CardemuErrCollision", 
	"BRP_CardEmu_CardemuErrHf", "BRP_CardEmu_CardemuErrFrame", 
	"BRP_CardEmu_CardemuErrCrc", "BRP_CardEmu_CardemuErrCom", 
	"BRP_CardEmu_CardemuErrBuflen", "BRP_CardEmu_CardemuErrTimeout", 
	"BRP_I4CE_ErrIso144State", "BRP_I4CE_ErrCom", "BRP_I4CE_ErrTransmission", 
	"BRP_I4CE_ErrTimeout", "BRP_I4CE_ErrOverflow", "BRP_I4CE_ErrInternal", 
	"BRP_FlashFS_ErrFsCorrupt", "BRP_FlashFS_ErrRecordCorrupt", 
	"BRP_FlashFS_ErrFlashAccess", "BRP_FlashFS_ErrDirectoryFull", 
	"BRP_FlashFS_ErrFileNotFound", "BRP_FlashFS_ErrEndOfFile", 
	"BRP_FlashFS_ErrFull", "BRP_FlashFS_ErrFileExist", 
	"BRP_Iso14CE_ErrIso144State", "BRP_Iso14CE_ErrCom", 
	"BRP_Iso14CE_ErrTransmission", "BRP_Iso14CE_ErrTimeout", 
	"BRP_Iso14CE_ErrOverflow", "BRP_Iso14CE_ErrInternal", 
	"BRP_Iso14CE_ErrDeselect", "BRP_BlePeriph_ErrNotInactive", 
	"BRP_MobileId_ErrNoCredential", "BRP_MobileId_ErrProtocol", 
	"BRP_MobileId_ErrAuthentication", "BRP_MobileId_ErrCredentialVersion", 
	"BRP_MobileId_ErrCredentialCmac", "BRP_Mce_ErrNoTag", 
	"BRP_Mce_ErrDisabled", "BRP_Mce_ErrLicense", "BRP_LT_ErrLtNoTag", 
	"BRP_LT_ErrLtCrc", "BRP_LT_ErrLtParity", "BRP_LT_LtNackReceived", 
	"BRP_LT_ErrLtHf", "BRP_LT_ErrLtSnr", "BRP_LT_ErrLtBitcount", 
	"BRP_LT_ErrLtFileov", "BRP_LT_ErrLtCom", "BRP_LT_ErrLtCmd", 
	"BRP_LT_ErrLtEepRead", "BRP_LT_ErrLtEepWrite", "BRP_UlRdr_ErrResponse", 
	"BRP_UlRdr_ErrSequence", "BRP_UlRdr_ErrSignature", 
	"BRP_MsgQueue_ErrMsgqRecvTimeout", "BRP_MsgQueue_ErrMsgqNotackedTimeout", 
	"BRP_MsgQueue_ErrMsgqCollision", "BRP_MsgQueue_ErrMsgqBufoverflow", 
	"BRP_DHWCtrl_ErrUnknownPort", "BRP_DHWCtrl_ErrMarshall", 
	"BRP_DHWCtrl_ErrNoStartupRun", "BRP_DHWCtrl_ErrNoPowermgr", 
	"BRP_DHWCtrl_ErrNoProdloader", "BRP_DHWCtrl_ErrPfid2NotAvailable", 
	"BRP_DHWCtrl_ErrEepIndex", "BRP_DHWCtrl_ErrEepVerify", 
	"BRP_DHWCtrl_ErrEepTimeout", "BRP_DHWCtrl_ErrDataflash", 
	"BRP_DHWCtrl_ErrDataflashTimeout", "BRP_DHWCtrl_ErrDataflashVerify", 
	"BRP_DHWCtrl_ErrDataflashParam", "BRP_DHWCtrl_ErrDataflashSpi", 
	"BRP_DHWCtrl_ErrDataflashFlash", "BRP_DHWCtrl_ErrAvrProgSpi", 
	"BRP_DHWCtrl_ErrAvrProgPdi", "BRP_DHWCtrl_ErrNicNoData", 
	"BRP_DHWCtrl_ErrNicBufferFlow", "BRP_Main_ErrOutdatedFirmware", 
	"BRP_Main_ErrUnknownVersion", "BRP_Main_ErrInvalidState", 
	"BRP_Main_ErrReadFile", "BRP_Main_ErrInvalidFormat", 
	"BRP_Main_ErrInvalidCustomerKey", "BRP_Main_ErrInvalidConfigSecurityCode", 
	"BRP_Main_ErrInvalidConfigVersion", "BRP_Main_ErrInvalidCmac", 
	"BRP_Main_ErrUpload", "BRP_Main_ErrUnsupportedFirmware", 
	"BRP_Main_ErrAlreadyUpToDate", "BRP_Main_ErrMissingConfigSecurityCode", 
	"BRP_Main_ErrInvalidEccKey", "BRP_Dbg_DbgErrBusy", 
	"BRP_ERRGRP_COMM_UNSUPPORTED", "BRP_ERR_UNSUPPORTED_COMMAND", 
	"BRP_ERRGRP_COMM_ACCESSDENIED", "BRP_ERR_DEV_CERT_INVALID_SIGNATURE", 
	"BRP_ERR_HOST_CERT_INVALID_SIGNATURE", "BRP_ERR_SEC_LEVEL_NOT_SUPPORTED", 
	"BRP_ERR_SEQ_CTR_NOT_IN_SYNC", "BRP_ERR_INVALID_HMAC", 
	"BRP_ERR_CRYPTO_RECV_DEV", "BRP_ERR_COMMAND_DENIED", 
	"BRP_ERR_INVALID_KEY", "BRP_ERRGRP_COMM_TIMEOUT", "BRP_ERR_CMD_TIMEOUT", 
	"BRP_ERR_TIMEOUT", "BRP_ERRGRP_COMM_FRAMEFORMAT", "BRP_ERR_FRAMEFORMAT", 
	"BRP_ERR_BUFFER_OVERFLOW", "BRP_ERR_PAYLOAD_FORMAT", 
	"BRP_ERR_CRYPTO_FORMAT", "BRP_ERR_DEV_CERT_FORMAT", 
	"BRP_ERR_HOST_CERT_FORMAT", "BRP_ERR_UNEXPECTED_FRAME", 
	"BRP_ERRGRP_COMM_UNDEFINED", "BRP_ERRGRP_COMMUNICATION", 
	"BRP_ERRGRP_LIB_INVALIDCALL", "BRP_ERR_INVALID_API_CALL", 
	"BRP_ERR_NOT_IMPLEMENTED", "BRP_ERR_BUSY", "BRP_ERR_CLOSED", 
	"BRP_ERR_CALLED_INVALID_FRAME", "BRP_ERR_EXISTING_LAYER", 
	"BRP_ERRGRP_LIB_NONRECOVERABLE", "BRP_ERR_INTERNAL", 
	"BRP_ERR_OUT_OF_MEMORY", "BRP_ERR_PKI_OPERATION_FAILED", 
	"BRP_ERRGRP_LIB_OS", "BRP_ERR_OPEN_IO", "BRP_ERR_WRITE_IO", 
	"BRP_ERR_WAIT_IO", "BRP_ERR_READ_IO", "BRP_ERR_CLOSE_IO", 
	"BRP_ERR_GEN_RANDOM_DATA", "BRP_ERRGRP_LIB_UNDEFINED", 
	"BRP_ERRGRP_LIBRARY", "BRP_ERRMASK_GROUP", 
};


static char * ec_descs[] = {
	"If a function of return type :brp_errcode runs properly, it returns this value.", 
	NULL, 
	"A command failed to execute due to a error on the device side which is not host communication related (card error, ...) The lower 16bits of the error code will contains the command group code and the status code (see also #BRP_ERR_STATUS() on how to construct a specific error code). The exact list of error codes returned by the device can be found in the  baltech_api.", 
	"There's not enough space to store the reader's configuration values.", 
	"Reading/writing to the internal memory failed.  \n\n**Please[ get in touch](https://docs.baltech.de/support/contact-support.html)\nwith us.**", 
	"The meaning of this status code varies depending on the access mode:\n\n  * _Read access:_ The desired key/value couldn't be found in the configuration. \n  * _Write access:_ The key/value ID is invalid. The value couldn't be set.", 
	"The format of the configuration file (BEC file) is invalid.", 
	"Memory access denied. The configuration value ID is too high (> 0x80).", 
	"Register cannot be modified or doesn't exist.", 
	"The selected protocol isn't supported by the current firmware.", 
	"This feature isn't supported by the reader hardware.", 
	"Restoring the reader's factory settings failed.", 
	"[Sys.CfgLoadBlock](.#Sys.CfgLoadBlock) was run with an invalid Config Security\nCode, i.e. the configuration you're trying to deploy is not a new version of\nthe existing configuration, but a completely different configuration ([ learn\nmore](https://docs.baltech.de/project-setup/security.html#config-security-\ncode)).", 
	"[Sys.CfgLoadBlock](.#Sys.CfgLoadBlock) was run with a configuration version\nthat is older than the one currently deployed ([ learn\nmore](https://docs.baltech.de/project-setup/security.html#configuration-\nupdates-with-rollback-prevention)).", 
	"The command can't be run in the current (CfgLoadBlock) state, i.e. [\nSys.CfgLoadFinish](.#Sys.CfgLoadFinish) must be run after [\nSys.CfgLoadPrepare](.#Sys.CfgLoadPrepare).", 
	"The CRC of the firmware is invalid. This error can only be returned by the\n[Sys.GetFwCrc](.#Sys.GetFwCrc) command.", 
	"This status code occurs in the following cases:\n\n  * There's no card in the antenna field.\n  * The card doesn't respond, i.e. it doesn't match the given VHL file.\n  * You use an HID Prox/Indala/Keri card, but the reader doesn't have the [required Prox license](https://docs.baltech.de/project-setup/get-prox-license-for-hid-prox-indala-keri.html). \n\nThis status code is the only one that requires a reselection of the card with\n[VHL.Select](.#VHL.Select).", 
	"The command can't be run because no card is selected.", 
	"Communication problems with the card occurred. Data may have been corrupted.", 
	"The VHL file structure in the reader configuration is invalid or the specified\nVHL file isn't available.", 
	"An authentication error occurred. Data may have been written partially. This\nmay occur if the specified VHL file uses invalid keys (MIFARE) or the\nspecified stamp is not in the reader's EEPROM (LEGIC).", 
	"The communication sequence was OK, but reading failed. The card remains\nselected. This may occur if the specified VHL file is too long for the\nphysical card storage.", 
	"The communication sequence was OK, but writing failed. Data may have been\nwritten partially. The card remains selected. This may occur if the specified\nVHL file is too long for the physical card storage.", 
	"A BALTECH ConfigCard has been detected successfully and will be read after\nthis command.", 
	"The desired card type doesn't match the card family of the currently selected\ncard.", 
	"The command is currently not supported. Future releases may support the\ncommand.", 
	"The communication sequence was OK, but formatting failed. Data may have been\nwritten partially. The card remains selected.", 
	"An error occurred while communicating with the reader chip/SAM.", 
	"Card communication error: The command has been aborted, or the response hasn't\nbeen read completely.", 
	"Encrypted block format is invalid.", 
	"Internal key cannot be accessed for the specified action due to the access\ncondition flags settings.", 
	"Specified key not available in the internal key list.", 
	"Configuration key cannot be stored in the reader's configuration.", 
	"No valid configuration card key. Since no key is present, the reader is forced\nto work unencrypted.\n\n**This status code is not supported by Crypto.Encrypt/Crypto.Decrypt commands\ndue to legacy reasons.**", 
	"The specified file name is not supported by the reader.", 
	"Permission missing to read/write file.", "Cannot write data.", 
	"Cannot read data.", "Cannot transfer data without opening a file.", 
	"Filesystem ran out of memory.", 
	"Transfer was broken prematurely with FinishTransfer.", 
	"The RTC hardware is defect.", 
	"The battery of the RTC is low. The time may be invalid.", 
	"No valid card has been presented to the reader so far.", 
	"A runtime error occurred when executing the script.", 
	"There's a syntax error in the script code.", 
	"The script ran the command\n[DefaultAction](../cfg/baltechscript.xml#BaltechScript.DefaultAction).", 
	"Autoread is disabled.", 
	"Invalid key used for encryption/MACing, MAC address invalid, or decrypted data\ninvalid.", 
	"It is not possible to tunnel this command.", 
	"Error reading from I2C interface.", "Error writing to I2C interface.", 
	"Invalid Key used for encryption/MACing or MAC is invalid.", 
	"It is not possible to tunnel this command.", 
	"The certificate (or key) has invalid format or signature.", 
	"The sequence counter was too low.", 
	"This security level has no key for authentication.", 
	"The security session timed out.", 
	"The specified port isn't available or it doesn't support the desired\noperation.", 
	"No valid LicenseCard detected.", 
	"Card cannot be accessed (e.g. card was removed too early).", 
	"The license type of the presented LicenseCard isn't supported by the reader\nhardware or firmware.  \n_Example:_ Readers without 125 kHz interface don't support LicenseCards\ncontaining [Prox licenses](https://docs.baltech.de/installation/deploy-\nlicense.html).", 
	"A license of this type is already activated on the reader.", 
	"The LicenseCard contains no free license.", 
	"The license couldn't be activated on the reader.  \n\n**Please[ get in touch](https://docs.baltech.de/support/contact-support.html)\nwith us.**", 
	"There's no card in the HF field, or the card doesn't respond.", 
	"The response frame is invalid, e.g. it may contain an invalid CRC checksum.\nPlease rerun the command.", 
	"Card authentication has failed.", 
	"Legacy error code: The parity bits don't match the transmitted data.\nAuthentication has been lost. Please reauthenticate and rerun the commands.", 
	"The card behaves in an unspecified way. Please rerun the command or reselect\nthe card.", 
	"Legacy error code: The serial number is wrong.", 
	"The key in the SAM/crypto memory is invalid or missing.", 
	"Card authentication has failed. The current configuration/state doesn't allow\nthe requested command.", 
	"Legacy error code: HF data transition error. The number of received bits is\ninvalid.", 
	"Legacy error code: HF data transition error. The number of received bytes is\ninvalid.", 
	"The proximity check has timed out. Please reselect the card.", 
	"Writing to the card has failed. Please rerun the command or check the access\nconditions.", 
	"Legacy error code: Increment couldn't be performed.", 
	"Legacy error code: Decrement couldn't be performed.", 
	"Reading data from the card has failed. Please rerun the command or check the\naccess conditions.", 
	"Legacy error code: An overflow occurred during decrement or increment.", 
	"The response frame is invalid, e.g. it may contain an invalid number of bits.\nPlease rerun the command.", 
	"The command has been aborted because the HF interface has been requested by\nanother task or command. Please reselect the card.\n\n**This error only occurs when you combine VHL and low-level commands. We\nhighly recommend you avoid that combination as these 2 command sets will\ninterfere with each other's card states.**", 
	"The specified command or parameters are unknown.", 
	"An error occurred in the anti-collision sequence. Please reselect the card.", 
	"Communication with the reader's HF interface has failed. Please reset the HF\ninterface with [Sys.HFReset](system.xml#Sys.HFReset) and check the reader\nstatus with [Sys.GetBootStatus](system.xml#Sys.GetBootStatus).", 
	"This command isn't supported by the reader firmware.", 
	"A value operation, e.g. increment or decrement, has failed. This may have\nseveral reasons, e.g. an invalid value format, or the value to manipulate\ndoesn't exist on the card.", 
	"Secure messaging error: The CRC or MAC checksum doesn't match the transmitted\ndata. Authentication has been lost. Please reauthenticate and rerun the\ncommands, or check the security conditions.", 
	"Card error as per MIFARE specification: Condition of use not satisfied.", 
	"This command isn't supported by the reader hardware, i.e. by the SAM or reader\nchip.", 
	"Unlocking/authenticating with the SAM has failed. Please check the\n[SamAVx](../cfg/base.xml#Project.SamAVx) configuration values.", 
	"Communication with the SAM has failed. This may have several reasons, e.g. the\nwrong SAM type or a failure to activate the SAM. Please check the SAM status\nand reset the reader with [Sys.Reset](system.xml#Sys.Reset).", 
	"No LEGIC Prime card detected.", 
	"Either the desired command is impossible to execute because no card is\ncurrently selected, or the specified parameters are invalid (e.g. wrong\naddress, to many Bytes specified for reading/writing, ...). This status code\nmay also come up when the [Lg.Select](.#Lg.Select) command is executed when\nless than 5 Bytes to read are specified and access has been denied.\n\nA card that was already selected before execution of the command triggering\nthis status code will stay selected.", 
	"Read/write not allowed due to the access conditions flags of the selected\ncard/segment.\n\nA card that was already selected before execution of the command triggering\nthis status code will stay selected.", 
	"Error occurred while transferring data via the HF field.\n\nAn occurrence of this error makes it necessary to reselect the card with the\n[Lg.Select](.#Lg.Select) command for further communication.", 
	"Data has been corrupted during transmission between the reader and the card.\n\n**In case this error is generated by the[ Lg.WriteMIM](.#Lg.WriteMIM) command\nor by the[ Lg.WriteMIMCRC](.#Lg.WriteMIMCRC) command, corrupted data may have\nbeen written to the card. Please make sure to rewrite the data correctly to\nensure consistency.**\n\nAn occurrence of this error makes it necessary to reselect the card with the\n[Lg.Select](.#Lg.Select) command for further communication.", 
	"CRC checksum invalid.\n\nA card that was already selected before execution of the command triggering\nthis status code will stay selected.", 
	"Checksum error most likely occurred in internal communication. It is\nrecommended to repeat the command.\n\nA card that was already selected before execution of the command triggering\nthis status code will stay selected.", 
	"Card is corrupted and may not longer be used.", 
	"The SM05 is busy and cannot process the command. Please wait until\ncommunication with the SM05 is finished.", 
	"The SC-2560 is still powering up and is not available yet.", 
	"No LEGIC Advant/Prime card found in the reader's HF field or communication\nwith card lost.", 
	"The LEGIC reader chip returned an error code.\n\nThe LEGIC reader reported an error that occurred during command execution. The\nactual LEGIC status code appears in the response parameter.", 
	"Communication error.\n\nCommand could not be executed successfully due to a error in the communication\nof the reader controller with the LEGIC chip (e.g. checksum error, internal\ntimeout error). It is recommended to repeat the command.", 
	"LEGIC support is not initialized yet.\n\nAfter powering up, the LEGIC chip normally needs several 100 milliseconds\nuntil it is ready to execute commands. As long as the reader returns this\nstatus code the command needs to be repeated.\n\nIf the LEGIC chip is still not available 3.5 seconds after the reader has\npowered up, usually due to a hardware defect, the _Rf13MHzLegic_ boot status\nof the Baltech reader will be set (The Baltech reader boot status can be read\nusing the [Sys.GetBootStatus](system.xml#Sys.GetBootStatus) command).", 
	"No LEGIC reader chip is assembled on this hardware.\n\nThis reader device doesn't support LEGIC. Please check the model number.", 
	"No card in field of antenna or card in field of antenna does not match the\ngiven VHL-file.", 
	"More than one PICC answered in the same time slot and none of them could\ntherefore be requested correctly.\n\n**In case this status code is returned by the[\nIso14a.Request](.#Iso14a.Request) command, when two or more ISO 14443 Type A\nPICCs of different types (e.g. one Mifare Classic card and one Mifare DESFire\ncard) are present in the HF field of the reader, the AQTA response will still\nbe returned and the card selection procedure can be continued normally with\nthe[ Iso14a.Select](.#Iso14a.Select) command.**", 
	"General HF error.", 
	"Key error (Only triggered by Mifare authentication).", 
	"Bit error, Parity error or Frame error (start/stop bit).", 
	"CRC checksum error.", "Error in communication with reader chip.", 
	"Error accessing EEPROM of the reader chip.", 
	"Reader chip does not support card type.", 
	"Command not supported by hardware.", "Command has been interrupted.", 
	"No card in field of antenna or card in field of antenna does not match given\nVHL-file.", 
	"More than one PICC answered in the same time slot and none of them could\ntherefore be requested correctly. The [Iso14b.Request](.#Iso14b.Request)\ncommand needs to be called again, maybe with more time slots.", 
	"Authentication error.", "General HF error.", 
	"Bit error, parity error or frame error (start/stop bit).", 
	"CRC checksum error.", "Error in communication with reader chip.", 
	"Error accessing EEPROM of the reader chip.", 
	"Reader chip does not support card type.", 
	"Either internal list of labels or response buffer full.", 
	"Command not supported by hardware.", 
	"No card in field of antenna or card in field of antenna does not match given\nVHL-file.", 
	"General HF error.", "PICC corrupt or behaves unspecified.", 
	"Error in communication to reader chip.", 
	"Command and/or parameters invalid.", "No PICC", 
	"Collision occurred (value will be ordered with bit position of collision in\nhigh nibble!)", 
	"General HF error", 
	"Bit error, parity error or frame error (start/stop-bit)", 
	"CRC checksum error", "Communication error UC - reader chip", 
	"Reader chip does not support card type", 
	"Command not supported by hardware", 
	"There's no card in the HF field, or the card doesn't respond.", 
	"The command has been aborted because the HF interface has been requested by\nanother task or command. Please reselect the card.\n\n**This error only occurs when you combine VHL and low-level commands. We\nhighly recommend you avoid that combination as these 2 command sets will\ninterfere with each other's card states.**", 
	"The response frame received from the PICC is invalid, e.g. it may contain an\ninvalid number of bits. Please rerun the command.", 
	"The card behaves in an unspecified way or is corrupted. Please rerun the\ncommand or reselect the card.", 
	"Communication with the reader's HF interface has failed. Please reset the HF\ninterface with [Sys.HFReset](system.xml#Sys.HFReset) and check the reader\nstatus with [Sys.GetBootStatus](system.xml#Sys.GetBootStatus).", 
	"ISO 14443-4 error: The command or parameters are invalid.", 
	"ISO 14443-4 error: The card returned an invalid response, e.g. data with an\ninvalid length. This may have several reasons, e.g. a wrong card type.", 
	"Authentication with the PICC has failed, e.g. because the encryption algorithm\nor key is wrong.", 
	"Secure messaging error: The CRC or MAC checksum doesn't match the transmitted\ndata. Authentication has been lost. Please reauthenticate and rerun the\ncommands.", 
	"The key in the SAM/crypto memory is invalid or missing.", 
	"Card error as per DESFire specification: No changes done to backup files,\nCommitTransaction / AbortTransaction not necessary.", 
	"The BRP command contains an invalid parameter.", 
	"The proximity check has timed out. Please reselect the card.", 
	"This command or parameter isn't supported by the reader firmware.", 
	"Communication with the SAM has failed. This may have several reasons, e.g. the\nwrong SAM type or a failure to activate the SAM. Please check the SAM status\nand reset the reader with [Sys.Reset](system.xml#Sys.Reset).", 
	"Unlocking/authenticating with the SAM has failed. Please check the\n[SamAVx](../cfg/base.xml#Project.SamAVx) configuration values.", 
	"This command isn't supported by the reader hardware.\n\n**This error may refer to any hardware component.**", 
	"Card error as per DESFire specification: Command code not supported by card.\nThis status code is identical to ErrIllegalCmd (0x33) und returned be older\nfirmware versions.", 
	"Card error as per DESFire specification: Length of command string invalid.", 
	"Card error as per DESFire specification: Current configuration/state does not\nallow the requested command.", 
	"Card error as per DESFire specification: Value of the parameter invalid.", 
	"Card error as per DESFire specification: Requested AID not present on PICC.", 
	"Card error as per DESFire specification: Unrecoverable error in application.\nApplication will be disabled.", 
	"Card error as per DESFire specification: Current authentication status does\nnot allow execution of requested command.", 
	"Card error as per DESFire specification: Attempted to read/write beyond the\nlimits of the file.", 
	"Card error as per DESFire specification: Unrecoverable error within PICC, PICC\nwill be disabled.", 
	"Card error as per DESFire specification: Previous command was not fully\ncompleted. Not all frames were requested or provided by the reader.", 
	"Card error as per DESFire specification: PICC was disabled by an unrecoverable\nerror.", 
	"Card error as per DESFire specification: Number of applications limited to 28,\nno additional CreateApplication possible.", 
	"Card error as per DESFire specification: Creation of file/application failed\nbecause file/application with same number already exists.", 
	"Card error as per DESFire specification: Could not complete NV-write operation\ndue to loss of power, internal backup/rollback mechanism activated.", 
	"Card error as per DESFire specification: Specified file number does not exist.", 
	"Card error as per DESFire specification: Unrecoverable error within file, file\nwill be disabled.", 
	"Card error as per DESFire specification: Invalid key number specified.", 
	"Card error as per DESFire specification: Insufficient NV-Memory to complete\ncommand .", 
	"Card error as per DESFire specification: Command code not supported by card.", 
	"Card error as per DESFire specification: Too many commands in the session or\ntransaction.", 
	"No PICC in HF field.", "PICC-reader communication error.", 
	"Bit error, parity error or frame error.", 
	"Communication error uC - reader chip.", 
	"Reader chip does not support cardtype-selected baud rate.", 
	"Command not supported by hardware.", 
	"Communication error.\n\nCommand could not be executed successfully due to a error in the communication\nof the reader controller with the LEGIC chip (e.g. checksum error, internal\ntimeout error). It is recommended to repeat the command.", 
	"LEGIC support is not initialized yet.\n\nAfter powering up, the LEGIC chip normally needs several 100 milliseconds\nuntil it is ready to execute commands. As long as the reader returns this\nstatus code the command needs to be repeated.\n\nIf the LEGIC chip is still not available 3.5 seconds after the reader has\npowered up, usually due to a hardware defect, the _Rf13MHzLegic_ boot status\nof the Baltech reader will be set (The Baltech reader boot status can be read\nusing the [Sys.GetBootStatus](system.xml#Sys.GetBootStatus) command).", 
	"No LEGIC reader chip is assembled on this hardware.\n\nThis reader device doesn't support LEGIC. Please check the model number.", 
	"No label in field of antenna.", 
	"This status code is triggered by two events:\n\n  * A collision between two or more labels occurred. \n  * DSFID different - cannot resolve collision.", 
	"General HF Error.", "Label status error.", 
	"Error in communication to reader chip.", 
	"Command and/or parameters invalid.", 
	"Reader chip does not support label type parameters.", 
	"Either internal list of labels or response buffer full.", 
	"The blocks requested are not equal in size (Read multiple blocks).", 
	"Command not supported by hardware.", "No label in field of antenna.", 
	"General HF error.", "Error in communication to reader chip.", 
	"Command and/or parameters invalid.", "No Tag", 
	"Frame Error (CRC, parity...)", "General hf error", "Hardware error", 
	"Chip type not supported by reader chip", 
	"Hardware does not support reader chip", "Command has been interrupted", 
	"There's no card in the HF field, or the card doesn't respond.", 
	"Authentication with the card has failed.", 
	"The response frame is invalid, e.g. it may contain an invalid number of bits\nor an invalid CRC checksum. Please rerun the command.", 
	"The encryption key is undefined or inaccessible.", 
	"The card didn't accept the command. Please check the conditions and rerun the\ncommand.", 
	"Communication with the reader chip has failed. Please reset the reader with\n[Sys.Reset](system.xml#Sys.Reset) and check the reader chip status with\n[Sys.GetBootStatus](system.xml#Sys.GetBootStatus).", 
	"The specified command or parameters are unknown.", 
	"This command isn't supported by the reader hardware.", 
	"This command isn't supported by the reader firmware.", 
	"The command has been aborted because the HF interface has been requested by\nanother task or command. Please reselect the card.\n\n**This error only occurs when you combine VHL and low-level commands. We\nhighly recommend you avoid that combination as these 2 command sets will\ninterfere with each other's card states.**", 
	"No tag error.", "Collision occurred.", "Wrong length or wrong data.", 
	"Receive checksum error.", "Wrong command parameter.", 
	"ISR buffer overflow during send/receive, TO during send.", 
	"Authentication error.", "Reader chip HW error.", 
	"Crypt processor HW error.", "Update of configuration not successful.", 
	"Another task requested control over HF via hf_request_control.", 
	"Hardware not supported.", "No tag error.", "Wrong length or wrong data.", 
	"Receive checksum error.", "Receive parity error.", 
	"Error detected during command execution.", 
	"Unknown tag type or modulation not detected.", 
	"ISR buffer overflow during send/receive, TO during send.", 
	"Host command parameter error.", 
	"Another task requested control over HF via hf_request_control.", 
	"Missing Platform ID or Readerchip error.", "Hardware not supported.", 
	"No tag error.", "Wrong length or wrong data.", "Parity error.", 
	"Wrong command param (on HF).", 
	"Another task requested control over HF via hf_request_control.", 
	"Reader chip hardware error.", "Hardware not supported.", 
	"You use an HID Prox/Indala/Keri card, but the reader doesn't have the\n[required Prox license](https://docs.baltech.de/project-setup/get-prox-\nlicense-for-hid-prox-indala-keri.html).", 
	"No tag error.", "Wrong length or wrong data.", "Wrong cmd param.", 
	"ISR buffer overflow during receive.", 
	"Another task requested control over HF via hf_request_control.", 
	"Platform ID missing or hardware error.", "Hardware not supported.", 
	"No tag error.", "Wrong length or wrong data.", "Parity error.", 
	"Wrong command param (on HF).", 
	"Another task requested control over HF via hf_request_control.", 
	"Missing Platform ID or Readerchip error.", "Hardware not supported.", 
	"No Tag.", "Wrong length or wrong data.", "Parity error.", 
	"Wrong command param (on HF).", 
	"Another task requested control over HF via hf_request_control.", 
	"Missing Platform ID or Readerchip error.", "Hardware not supported.", 
	"The specified slot index is not supported.", 
	"SAM aborted command execution by sending an abort command.", 
	"The specified protocol is not supported.", "Communication error.", 
	"Hardware error.", 
	"The command/parameter(s) is/are not supported by the SAM.", 
	"Page was neither found in configuration nor in flash", 
	"Unexpected end of page", 
	"Too much defines, too much frames or too much strings used by this page", 
	"The specified frame is not defined", "The render command is not known", 
	"String is too long", "invalid font", "No device connected.", 
	"Device did not respond within Timeout.", 
	"Device responded only with NACK within Timeout.", 
	"Device responded with STALL.", 
	"Error on transferring data (CRC, Invalid PID, ...).", 
	"Device sent unexpected data.", "Received too much data.", 
	"Failure on setting up pipes.", "No result yet.", 
	"Port is not connected.", "Detection is disabled.", 
	"This command was skipped, since condition bits did not match.", 
	"No tag error.", 
	"Collision occurred (status value will be stored with bit position of collision\nin high nibble).", 
	"General HF error.", 
	"Bit error, parity error or frame error (start /stop bit).", 
	"CRC checksum error.", "Communication error uC - reader chip.", 
	"Remaining data in FIFO / FIFO overflow.", 
	"Timeout occurred while waiting for card / APDU command.", 
	"Emulated PICC currently not in the proper state to exchange ISO14443-4 APDUs\n(PCD didn't activate the protocol or PICC has been deselected).\n\nCard emulation has to be restarted.", 
	"Communication problem between microcontroller and reader chip.", 
	"HF transmission error (e.g. CRC, framing,...).", 
	"Timeout: no APDU was received from the PCD within the specified time.", 
	"Buffer overflow: the PCD sent more data than the receive buffer of the\nemulated PICC can handle.", 
	"Internal error - should never occur.", 
	"The file system is corrupt: Format required.", 
	"The current record is corrupt.", 
	"Dataflash cannot be accessed: Hardware error.", 
	"The File cannot be created, since there are no more free entries.", 
	"The file is not created yet.", 
	"The end of the file is reached: no more records available.", 
	"There is no more space on the Dataflash.", 
	"The file cannot be created, since it already exists.", 
	"Emulated PICC currently not in the proper state to exchange ISO14443-4 APDUs\n(PCD didn't activate the protocol)\n\nCard emulation has to be restarted.", 
	"Communication problem between microcontroller and reader chip.", 
	"HF transmission error (e.g. CRC, framing,...).", 
	"Timeout: no APDU was received from the PCD within the specified time.", 
	"Buffer overflow: the PCD sent more data than the receive buffer of the\nemulated PICC can handle.", 
	"Internal error - should never occur.", "PICC has been deselected.", 
	"Must not call _BlePeriph.DefineService_ after calling\n[BlePeriph.Enable(true)](.#BlePeriph.Enable)", 
	"No valid credential has been presented to the reader so far.", 
	"The credential is trying to perform an action that doesn't comply with the\nBALTECH Mobile ID protocol. (For details, please refer to the protocol\nspecification, available on request.)", 
	"An authentication error occured, e.g. invalid encryption key or authentication\ntag.", 
	"The version of the presented credential is not compatible with the current\nreader firmware.", 
	"The presented credential is rejected due to an invalid CMAC.", 
	"No valid MCE device is currently presented to the reader.", 
	"MCE functionality is currently disabled.", 
	"A valid BLE license is required, but not available.", 
	"No tag present in the reader's RFID field.", "CRC checksum error.", 
	"Parity error.", "NACK received, command not accepted.", 
	"General HF error.", "Collision occurred.", 
	"Wrong number of bits received from the transponder.", 
	"To many blocks written to file.", 
	"Communication error uC - reader chip.", "Command syntax error.", 
	"Error reading EEPROM of the reader.", 
	"Error writing EEPROM of the reader.", 
	"Response received from reader is unexpected.", 
	"Command sequence was not kept.", 
	"Signature of SEND_ENCRYPTED is invalid.", 
	"Timeout: no message received within the specified time interval", 
	"Timeout: the message was not picked up within the specified time interval", 
	"Collision: there is already a message in the queue - pick up this data first", 
	"Buffer Overflow: the message is too large and can not be processed", 
	"This port is not available on this hardware platform.", 
	"The structure of a StartupRun-block is wrong or the command\n[DHWCtrl.GetStartupRun](.#DHWCtrl.GetStartupRun) has not properly been called.", 
	"There was no StartupRun-block, or the\n[DHWCtrl.GetStartupRun](.#DHWCtrl.GetStartupRun) command was not executed.", 
	"The Power Manager was unable to take the module into suspend mode.", 
	"No production loader is present in the reader's flash memory.", 
	"No PlatformID2 available.", 
	"Specified EEPROM address and amount of Bytes to write are not compatible.", 
	"Data written to EEPROM could not be verified.", 
	"Data could not be written within timeout.", 
	"Dataflash could not be found.", "Timeout occurred.", 
	"Verification failed after writing data.", 
	"Parameter(s)/address(es) are not valid.", 
	"Communication via SPI interface failed.", 
	"Flash device behaves in an unspecified manner.", 
	"SPI programming instruction couldn't be executed successfully.", 
	"PDI operation couldn't be executed successfully.", 
	"No data was received by NIC.", "Received data was to big for buffer.", 
	"Is returned by isFirmwareUpToDate() if the following piece of firmware is not\nup to date.", 
	"Is returned by isFirmwareUpToDate() if it's unknown whether the following\npiece of firmware is outdated or not.", 
	"Is returned by Bf3UploadStart if an upload process is already running or by\nBf3UploadContinue if an upload process is currently not active.", 
	"Is returned by Bf3UploadContinue if BF3/BEC2 file data couldn't be retrieved\nfrom the host.", 
	"Is returned by Bf3UploadContinue if the BF3/BEC2 file has an invalid format.", 
	"Is returned by Bf3UploadContinue if the customer key of the BEC2 file doesn't\nmatch the customer key stored in the reader.", 
	"Is returned by Bf3UploadContinue if the Config Security Code of the BEC2 file\ndoesn't match the Config Security Code stored in the reader.", 
	"Is returned by Bf3UploadContinue if the configuration version of the BEC2 file\nis older than the configuration version stored in the reader.", 
	"Is returned by Bf3UploadContinue if the Message Authentication Code (CMAC) of\nthe BF3/BEC2 file is incorrect.", 
	"Is returned by Bf3UploadContinue if a component of the current BF3/BEC2 file\ncouldn't be written to the reader memory.", 
	"Is returned by Bf3UploadContinue if the BF3/BEC2 file contains a firmware\nwhich is not supported by the reader hardware.", 
	"Is returned by Bf3UploadContinue if all relevant components of the current\nBF3/BEC2 file are already up to date.", 
	"Is returned by Bf3UploadContinue if the reader was not able to decode the\ncurrent BEC2 file, because there is no Config Security Code stored in the\nreader yet.", 
	"The elliptic curve key that is used to encrypt the configuration is wrong.", 
	"Still processing last command.", 
	"A command cannot be executed as the device does not support the requested feature", 
	"The specified BRP command is not supported by the connected device Internally the driver maps the status code BRP_ERR_STATUS(xxxx, 0x41) to this (cmdcode independant) error code.", 
	"A command cannot be executed as the device does not allow access this features in the current operations mode", 
	"The ECC certificate of the device is invalid", 
	"The ECC certificate of the host is invalid *or* the devices CA certificates (which are stored on the host!) have invalid signature", 
	"The given securitylevel is not supported", 
	"The sequence counter is not in sync any more. Requires to reopen PKI session.", 
	"The HMAC is invalid. Probably the reader has a different key/certificate.", 
	"device failed to decrypt PKI command successfully", 
	"The BRP command is not allowed to be executed from the current security level Internally the driver maps the status code BRP_ERR_STATUS(xxxx, 0x42) to this (cmdcode independant) error code.", 
	"The readers KEY does not match the key of the host.", 
	"A the device or host exceeded the allowed time for sending a frame", 
	"A BRP command that was send by brp_send_frame() exceeded the specified timeout (see also brp_send_cmd() / brp_exec_cmd()). **Attentention:** must not be intermixed with #BRP_ERR_TIMEOUT.", 
	"The response to a brp_recv_frame() / brp_recv_any_frame() is not returned within the specified timeout. **Attention:** Must not be intermixed with #BRP_ERR_CMD_TIMEOUT, which is returned if the timeout of a BRP command is exceeded (see brp_send_cmd()).", 
	"The device or host send a frame that does not correspond the expected frame", 
	"The frame returned from the reader does not match the format expected by the BRP protocol.", 
	"A Command's response is bigger than the buffer provided for the response.", 
	"The payload of a frame has invalid format", 
	"The payload of a encrypted/PKI command or a PKI certificate had invalid format/response.", 
	"The devices PKI end-Certificate had invalid format.", 
	"The hosts PKI Certificate *or* the devices CA certificates (which are stored on the host!) had invalid format. The certificates referred by this error code are passed from the application to brp_lib by brp_create_pki() (or alternatively by brp_append_host_certs() and brp_append_dev_ca_certs()). Usually this does not necessarily mean that they are denied by reader but that they are corrupted.", 
	"The received frame is a valid BRP frame but not expected in this protocol state.", 
	"any device <-> host communication problem which is not categoriezed by one of the BRP_ERRGRP_COMM_* macros", 
	"Any kind of device <-> host communication problem", 
	"The libraries API was used in an invalid manner", 
	"Returned if the a parameter contains an invalid value. I.e. if a required pointer is set to NULL.", 
	"The requested feature is not implemented yet", 
	"The Library is not ready to send/receive data. Probably it is still processing another request.", 
	"The protocol/device is not opened", 
	"Returned if the a frame passed to a function to be transferred to the device has invalid format", 
	"The layer is tried to be added to a composite protocol (see brp_add_layer() / brp_set_layer()) although already added earliert. Or it is tried to be removed (brp_detach_layer()) also not part of the composite protocol.", 
	"A fatal error occured, which the library cannot recover from. The application should be closed", 
	"This error must not be returned if the library operatares correctly. It is only returned, if a bug in the implementation was detetcted.", 
	"The heap has not enough memory to allocate a buffer that is required for the wanted operation.", 
	"A PKI operation cannot be executed", 
	"A error in the operating system layer (i.e. hardware drivers) occured", 
	"Failed to open the I/O connection", 
	"Failed to send data via IO connection", 
	"Failed to wait for data via IO connection", 
	"Failed to wait for data via IO connection", 
	"Failed to open the I/O connection", 
	"The OS failed to generate a random number", 
	"any library specific error which is not one of the BRP_ERRGRP_LIB_* macros.", 
	"Any error which occured in the library", 
	"BRP_MASK_XXX  BRP_MASK_XXX Defines bitmasks for :brp_errcode. If a errcode is and'ed with one of the bitmasks the corresponding part of the error can be extracted.", 
};


static char * ec_urls[] = {
	"https://docs.baltech.de/api-docs/c/errorcodes_8h.html", 
	"https://docs.baltech.de/api-docs/c/group__baltech__api.html", 
};


static int ec_url_map[] = {
	0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
};


static unsigned cmdcodes[] = {
	0x0000, 0x0001, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 
	0x000A, 0x000B, 0x000C, 0x000D, 0x000E, 0x000F, 0x0010, 0x0011, 0x0012, 
	0x0013, 0x0014, 0x0016, 0x0017, 0x0018, 0x0019, 0x0020, 0x0021, 0x0022, 
	0x0023, 0x0024, 0x0025, 0x0026, 0x0027, 0x0028, 0x0029, 0x007F, 0x0100, 
	0x0101, 0x0102, 0x0103, 0x0104, 0x0105, 0x0106, 0x0107, 0x0108, 0x0109, 
	0x010A, 0x010B, 0x010C, 0x010D, 0x010E, 0x010F, 0x0110, 0x0200, 0x0201, 
	0x0202, 0x0203, 0x0204, 0x0210, 0x0211, 0x0300, 0x0301, 0x0302, 0x0303, 
	0x0304, 0x0400, 0x0401, 0x0500, 0x0501, 0x0503, 0x0701, 0x0702, 0x0703, 
	0x0704, 0x0705, 0x0706, 0x0708, 0x0709, 0x070A, 0x0801, 0x0802, 0x0803, 
	0x0804, 0x0901, 0x0902, 0x0903, 0x0904, 0x0910, 0x0911, 0x0912, 0x0A01, 
	0x0A02, 0x0A03, 0x0A20, 0x0A21, 0x0B01, 0x0B02, 0x1000, 0x1001, 0x1002, 
	0x1003, 0x1004, 0x1005, 0x1006, 0x1007, 0x1008, 0x1009, 0x100A, 0x100B, 
	0x1010, 0x1011, 0x1012, 0x1013, 0x1014, 0x1015, 0x1016, 0x1017, 0x1018, 
	0x1019, 0x101A, 0x101B, 0x101C, 0x101D, 0x1101, 0x1103, 0x1104, 0x1105, 
	0x1106, 0x1107, 0x1108, 0x1109, 0x110A, 0x110D, 0x110E, 0x110F, 0x1110, 
	0x1220, 0x1302, 0x1303, 0x1304, 0x1305, 0x1306, 0x1307, 0x1318, 0x1319, 
	0x1320, 0x1323, 0x1402, 0x1403, 0x1404, 0x1420, 0x1421, 0x1422, 0x1600, 
	0x1601, 0x1602, 0x1A00, 0x1A01, 0x1A02, 0x1A03, 0x1A04, 0x1A05, 0x1A06, 
	0x1A07, 0x1B00, 0x1B01, 0x1B02, 0x1B03, 0x1B04, 0x1B05, 0x1B06, 0x1B07, 
	0x1B08, 0x1B0A, 0x1B0B, 0x1B0C, 0x1B0D, 0x1B10, 0x1B11, 0x1C00, 0x1C01, 
	0x1C02, 0x1E20, 0x2100, 0x2101, 0x2102, 0x2103, 0x2104, 0x2105, 0x2106, 
	0x2107, 0x2108, 0x2109, 0x210A, 0x210B, 0x210C, 0x210D, 0x210E, 0x210F, 
	0x2111, 0x2112, 0x2120, 0x2121, 0x2122, 0x2123, 0x2200, 0x2201, 0x2202, 
	0x2210, 0x2211, 0x2212, 0x2400, 0x2401, 0x2402, 0x2500, 0x2501, 0x2502, 
	0x2503, 0x2504, 0x3000, 0x3001, 0x3002, 0x3003, 0x3004, 0x3010, 0x3100, 
	0x3108, 0x3110, 0x3111, 0x3112, 0x3113, 0x3114, 0x3118, 0x3119, 0x311A, 
	0x311B, 0x3120, 0x3300, 0x3301, 0x3302, 0x3303, 0x3304, 0x3305, 0x3306, 
	0x3307, 0x3402, 0x3410, 0x3500, 0x3601, 0x3602, 0x3603, 0x4000, 0x4001, 
	0x4002, 0x4003, 0x4004, 0x4005, 0x4006, 0x4100, 0x4101, 0x4102, 0x4110, 
	0x4111, 0x4112, 0x4200, 0x4201, 0x4202, 0x4203, 0x4401, 0x4402, 0x4403, 
	0x4404, 0x4405, 0x4406, 0x4407, 0x4408, 0x4409, 0x440A, 0x440B, 0x440C, 
	0x4500, 0x4501, 0x4502, 0x4503, 0x4504, 0x4505, 0x4506, 0x4507, 0x4508, 
	0x4600, 0x4610, 0x4611, 0x4612, 0x4620, 0x4700, 0x4701, 0x4702, 0x4703, 
	0x4704, 0x4801, 0x4802, 0x4803, 0x4804, 0x4901, 0x4902, 0x4903, 0x4904, 
	0x4905, 0x4906, 0x4907, 0x4908, 0x4909, 0x4A01, 0x4A02, 0x4A03, 0x4A04, 
	0x4B01, 0x4B02, 0x4B03, 0x4B04, 0x4B05, 0x4B06, 0x4B07, 0x4C01, 0x4C02, 
	0x4C03, 0x4D01, 0x4D02, 0xA034, 0xA036, 0xA041, 0xA042, 0xA043, 0xA045, 
	0xA04E, 0xA04F, 0xA060, 0xA061, 0xA070, 0xA071, 0xA072, 0xA073, 0xA074, 
	0xA075, 0xA076, 0xA07C, 0xA07D, 0xA07E, 0xA07F, 0xA080, 0xA081, 0xA082, 
	0xA083, 0xA084, 0xA088, 0xA089, 0xA08A, 0xA500, 0xA501, 0xA502, 0xA503, 
	0xA504, 0xA505, 0xA600, 0xA601, 0xA602, 0xA603, 0xE000, 0xE001, 0xE002, 
	0xE003, 0xE004, 0xE005, 0xE006, 0xE007, 0xE008, 0xE010, 0xE011, 0xE012, 
	0xE013, 0xE014, 0xE015, 0xE016, 0xE017, 0xE018, 0xE019, 0xE01A, 0xE01B, 
	0xE01C, 0xE01D, 0xE01E, 0xE020, 0xE021, 0xE022, 0xE023, 0xE024, 0xE025, 
	0xE026, 0xE027, 0xE028, 0xE031, 0xE032, 0xE033, 0xE034, 0xE035, 0xE036, 
	0xE037, 0xE038, 0xE039, 0xE03A, 0xE03B, 0xE03C, 0xE03D, 0xE03E, 0xE03F, 
	0xE041, 0xE042, 0xE043, 0xE044, 0xE045, 0xE046, 0xE047, 0xE050, 0xE051, 
	0xE052, 0xE053, 0xE054, 0xE055, 0xE056, 0xE057, 0xE058, 0xE059, 0xE05A, 
	0xE05B, 0xE05C, 0xE05D, 0xE05E, 0xE05F, 0xE060, 0xE061, 0xE062, 0xE063, 
	0xE064, 0xE065, 0xE066, 0xE068, 0xE069, 0xE06A, 0xE07B, 0xE07C, 0xE07D, 
	0xE07E, 0xE07F, 0xE080, 0xE081, 0xE082, 0xE083, 0xE084, 0xE085, 0xE086, 
	0xF001, 0xF002, 0xF004, 0xF005, 0xF010, 0xF011, 0xF300, 0xF301, 
};


static char * cc_names[] = {
	"Sys.GetBufferSize", "Sys.HFReset", "Sys.Reset", "Sys.GetInfo", 
	"Sys.GetBootStatus", "Sys.GetPort", "Sys.SetPort", "Sys.CfgGetValue", 
	"Sys.CfgSetValue", "Sys.CfgDelValues", "Sys.CfgGetKeyList", 
	"Sys.CfgGetValueList", "Sys.CfgWriteTlvSector", "Sys.ConfigPort", 
	"Sys.SetRegister", "Sys.GetRegister", "Sys.PowerDown", 
	"Sys.SelectProtocol", "Sys.CfgCheck", "Sys.SetCommParam", 
	"Sys.CfgLoadBlock", "Sys.GetPlatformId", "Sys.CfgReset", 
	"Sys.StopProtocol", "Sys.CfgGetId", "Sys.CfgGetDeviceSettingsId", 
	"Sys.FactoryResetLegacy", "Sys.GetStatistics", "Sys.GetFeatures", 
	"Sys.GetPartNumber", "Sys.CfgLoadPrepare", "Sys.CfgLoadFinish", 
	"Sys.FactoryReset", "Sys.GetLicenses", "Sys.GetFwCrc", "VHL.Select", 
	"VHL.GetSnr", "VHL.Read", "VHL.Write", "VHL.IsSelected", 
	"VHL.GetLegacyATR", "VHL.ExchangeAPDU", "VHL.Setup", "VHL.SetupMifare", 
	"VHL.SetupLegic", "VHL.SetupISO15", "VHL.CheckReconfigErr", 
	"VHL.ExchangeLongAPDU", "VHL.GetFileInfo", "VHL.GetATR", "VHL.Format", 
	"VHL.ResolveFilename", "Crypto.EncryptBlock", "Crypto.DecryptBlock", 
	"Crypto.EncryptBuffer", "Crypto.DecryptBuffer", 
	"Crypto.BalKeyEncryptBuffer", "Crypto.GetKeySig", "Crypto.CopyConfigKey", 
	"Ftob.OpenReadFile", "Ftob.OpenWriteFile", "Ftob.ReadFileBlock", 
	"Ftob.WriteFileBlock", "Ftob.CloseFile", "Rtc.GetTime", "Rtc.SetTime", 
	"AR.SetMode", "AR.GetMessage", "AR.RunScript", "Sec.GetAcMask", 
	"Sec.SetAcMask", "Sec.SetKey", "Sec.AuthPhase1", "Sec.AuthPhase2", 
	"Sec.Tunnel", "Sec.Reset", "Sec.LockReset", "Sec.GetCurAcMask", 
	"I2c.SetSpeed", "I2c.Read", "I2c.Write", "I2c.TxRx", "Pki.PfsGenKey", 
	"Pki.PfsAuthHostCert", "Pki.PfsAuthRdrCert", "Pki.Tunnel2", 
	"Pki.GetX509Csr", "Pki.StoreX509Cert", "Pki.StoreX509RootCert", 
	"UI.Enable", "UI.Disable", "UI.Toggle", "UI.SetRgbLed", "UI.PulseRgbLed", 
	"Lic.GetLicenses", "Lic.ReadLicCard", "Mif.LoadKey", "Mif.Request", 
	"Mif.Anticoll", "Mif.Select", "Mif.AuthE2", "Mif.AuthUser", "Mif.Read", 
	"Mif.Write", "Mif.ChangeValue", "Mif.ChangeValueBackup", 
	"Mif.TransferBlock", "Mif.Halt", "Mif.AuthE2Extended", 
	"Mif.AuthUserExtended", "Mif.ResetAuth", "Mif.ReadSL3", "Mif.WriteSL3", 
	"Mif.ChangeAESKey", "Mif.ValueSL3", "Mif.ProxCheck", "Mif.GetCardVersion", 
	"Mif.ReadSig", "Mif.VirtualCardSelect", "Mif.SectorSwitch", 
	"Mif.SetFraming", "Mif.CommitReaderID", "Lg.Select", "Lg.Idle", 
	"Lg.GenSetRead", "Lg.GenSetDelete", "Lg.ReadMIM", "Lg.ReadMIMCRC", 
	"Lg.WriteMIM", "Lg.WriteMIMCRC", "Lg.MakeMIMCRC", "Lg.ReadSMStatus", 
	"Lg.SetPassword", "Lg.Lock", "Lg.Unlock", "Lga.TransparentCommand", 
	"Iso14a.RequestLegacy", "Iso14a.Select", "Iso14a.Halt", 
	"Iso14a.RequestATS", "Iso14a.PerformPPS", "Iso14a.Request", 
	"Iso14a.Anticoll", "Iso14a.SelectOnly", "Iso14a.TransparentCmd", 
	"Iso14a.TransparentCmdBitlen", "Iso14b.Request", "Iso14b.Attrib", 
	"Iso14b.Halt", "Iso14b.TransparentCmd", "Iso14b.SetTransparentSettings", 
	"Iso14b.GetTransparentSettings", "Iso14L4.SetupAPDU", 
	"Iso14L4.ExchangeAPDU", "Iso14L4.Deselect", "Pico.SetHfMode", 
	"Pico.RequestAnticoll", "Pico.Select", "Pico.Halt", "Pico.SelectBookPage", 
	"Pico.Authenticate", "Pico.Read", "Pico.Write", "Desfire.ExecCommand", 
	"Desfire.Authenticate", "Desfire.AuthExtKey", "Desfire.SelectApplication", 
	"Desfire.ReadData", "Desfire.WriteData", "Desfire.ChangeExtKey", 
	"Desfire.ChangeKey", "Desfire.CreateDam", 
	"Desfire.GetOriginalitySignature", "Desfire.VirtualCardSelect", 
	"Desfire.ProxCheck", "Desfire.GetDfNames", "Desfire.SetFraming", 
	"Desfire.ResetAuthentication", "Felica.Request", "Felica.SetUID2", 
	"Felica.GenericCmd", "Legic.TransparentCommand4000", "Iso15.SetParam", 
	"Iso15.GetParam", "Iso15.GetUIDList", "Iso15.SetMode", "Iso15.StayQuiet", 
	"Iso15.ReadBlock", "Iso15.WriteBlock", "Iso15.LockBlock", 
	"Iso15.ResetToReady", "Iso15.WriteAFI", "Iso15.LockAFI", 
	"Iso15.WriteDSFID", "Iso15.LockDSFID", "Iso15.GetSystemInformation", 
	"Iso15.GetSecurityStatus", "Iso15.CustomCommand", "Iso15.ReadSingleBlock", 
	"Iso15.WriteSingleBlock", "Iso15.TransparentCmdLegacy", 
	"Iso15.WriteMultipleBlocks", "Iso15.ReadMultipleBlocks", 
	"Iso15.TransparentCmd", "EpcUid.UidReplyRound", "EpcUid.UidWrite", 
	"EpcUid.UidDestroy", "EpcUid.EpcSetMode", "EpcUid.EpcSelect", 
	"EpcUid.EpcInventory", "Srix.Select", "Srix.Read", "Srix.Write", 
	"Ultralight.ExecCmd", "Ultralight.Read", "Ultralight.Write", 
	"Ultralight.AuthE2", "Ultralight.AuthUser", "Hitag.Request", 
	"Hitag.Select", "Hitag.Halt", "Hitag.Read", "Hitag.Write", 
	"Hitag.PersonaliseHtg", "EM.DecodeCfg", "EM.Read4100", "EM.Read4205", 
	"EM.Write4205", "EM.Halt4205", "EM.Login4205", "EM.Protect4205", 
	"EM.Read4469", "EM.Write4469", "EM.Halt4469", "EM.Login4469", 
	"EM.Read4450", "HID.IndalaRead", "HID.ProxRead", "HID.AwidRead", 
	"HID.IoProxRead", "HID.Prox32Read", "HID.PyramidRead", 
	"HID.IndalaSecureRead", "HID.IdteckRead", "TTF.ReadByteStream", 
	"TTF.IdteckRead", "QKey.Read", "ASK.SecuraKeyRead", "ASK.GproxRead", 
	"ASK.CotagRead", "Iso78.SelectSlot", "Iso78.OpenSamLegacy", 
	"Iso78.CloseSamLegacy", "Iso78.ExchangeApduLegacy", "Iso78.OpenSam", 
	"Iso78.CloseSam", "Iso78.ExchangeApdu", "Disp.Enable", "Disp.SetContrast", 
	"Disp.EnableBacklight", "Disp.Clear", "Disp.Load", "Disp.Extend", 
	"Keyboard.Exist", "Keyboard.CurrentKey", "Keyboard.EnableWakeup", 
	"Keyboard.WaitForKey", "UsbHost.Enable", "UsbHost.IsConnected", 
	"UsbHost.SetupPipes", "UsbHost.SetAddr", "UsbHost.Reset", 
	"UsbHost.TransRawSetup", "UsbHost.TransSetupIn", "UsbHost.TransSetupOut", 
	"UsbHost.TransIn", "UsbHost.TransOut", "UsbHost.Suspend", 
	"UsbHost.Resume", "Eth.GetMacAdr", "Eth.GetConnDevIP", 
	"Eth.CreateRecoveryPoint", "Eth.DelRecoveryPoint", "Eth.GetNetworkStatus", 
	"Eth.GetMIBCounters", "Eth.GetTcpConnectionStatus", 
	"Eth.OpenTcpConnection", "Eth.CloseTcpConnection", "Bat.Run", 
	"Bat.CheckStatus", "Bat.CheckAny", "Bat.CheckTemplate", "Bat.Delay", 
	"CardEmu.GetMaxFrameSize", "CardEmu.StartEmu", "CardEmu.TransparentCmd", 
	"CardEmu.GetExternalHfStatus", "CardEmu.StartNfc", "I4CE.StartEmu", 
	"I4CE.ExchangeInverseAPDU", "I4CE.ExtendWaitingTime", 
	"I4CE.GetExternalHfStatus", "FlashFS.GetMemoryInfo", "FlashFS.Format", 
	"FlashFS.CreateFile", "FlashFS.DeleteFile", "FlashFS.RenameFile", 
	"FlashFS.GetRecordSize", "FlashFS.GetFileSize", "FlashFS.ReadRecords", 
	"FlashFS.WriteRecords", "Iso14CE.ActivateCardAPDU", 
	"Iso14CE.ExchangeCardAPDU", "Iso14CE.ExtendWaitingTime", 
	"Iso14CE.GetExternalHfStatus", "BlePeriph.DefineService", 
	"BlePeriph.Enable", "BlePeriph.SetDeviceName", 
	"BlePeriph.SetCharacteristic", "BlePeriph.GetCharacteristic", 
	"BlePeriph.GetEvents", "BlePeriph.GetRSSI", "MobileId.Enable", 
	"MobileId.Setup", "MobileId.GetVirtualCredentialId", "Mce.Enable", 
	"Mce.Request", "LT.GetBootStatus", "LT.Reset", "LT.Request", 
	"LT.Anticoll", "LT.Select", "LT.Halt", "LT.HFReset", "LT.GetInfo", 
	"LT.HighSpeedWriteBlock", "LT.ContinousReadBlocks", "LT.ReadBlock", 
	"LT.WriteBlock", "LT.ReadWord", "LT.WriteWord", "LT.WriteFile", "LT.Test", 
	"LT.ReadMultipleBlocks", "LT.FastWriteBlock", "LT.FastWriteWord", 
	"LT.TransparentCmd", "LT.SetReturnLink", "LT.ReadBlockExtended", 
	"LT.WriteBlockExtended", "LT.ReadWordExtended", "LT.WriteWordExtended", 
	"LT.ReadMultipleBlocksExtended", "LT.FastWriteWordExtended", 
	"LT.ContinousReadBlocksExtended", "LT.HighSpeedWriteBlockExtended", 
	"UlRdr.SendAuth1", "UlRdr.RecvAuth1", "UlRdr.SendAuth2", 
	"UlRdr.RecvAuth2", "UlRdr.SendEncryptedCmd", "UlRdr.RecvEncryptedCmd", 
	"MsgQueue.GetMsgSize", "MsgQueue.Receive", "MsgQueue.Send", 
	"MsgQueue.SendReceive", "DHWCtrl.PortConfig", "DHWCtrl.PortGet", 
	"DHWCtrl.PortSet", "DHWCtrl.SetBaudrate", "DHWCtrl.SRAMTest", 
	"DHWCtrl.PortWait", "DHWCtrl.GetResetCause", "DHWCtrl.APortMeasure", 
	"DHWCtrl.MirrorData", "DHWCtrl.DispEnable", "DHWCtrl.DispBacklight", 
	"DHWCtrl.DispColor", "DHWCtrl.DispContrast", "DHWCtrl.DispBox", 
	"DHWCtrl.Ser2Ctrl", "DHWCtrl.Ser2WriteRead", "DHWCtrl.Delay1ms", 
	"DHWCtrl.Delay10us", "DHWCtrl.PowermgrSuspend", "DHWCtrl.ScanMatrix", 
	"DHWCtrl.GetReaderChipType", "DHWCtrl.SelectAntenna", 
	"DHWCtrl.GetSamType", "DHWCtrl.HfAcquire", "DHWCtrl.Ser2Flush", 
	"DHWCtrl.EepromWrite", "DHWCtrl.DataflashGetSize", 
	"DHWCtrl.DataflashErasePages", "DHWCtrl.DataflashRead", 
	"DHWCtrl.DataflashWrite", "DHWCtrl.EepromRead", 
	"DHWCtrl.SecurityAndConfigReset", "DHWCtrl.PulseGenerate", 
	"DHWCtrl.InitSer2", "DHWCtrl.InitRtc", "DHWCtrl.InitLcdDrv", 
	"DHWCtrl.InitRc", "DHWCtrl.InitMf", "DHWCtrl.InitIso14A", 
	"DHWCtrl.InitIso14B", "DHWCtrl.InitIso15", "DHWCtrl.InitLg", 
	"DHWCtrl.InitLga", "DHWCtrl.InitDf", "DHWCtrl.InitRc125", 
	"DHWCtrl.InitCc", "DHWCtrl.InitUsbHost", "DHWCtrl.InitNic", 
	"DHWCtrl.BohEnable", "DHWCtrl.NicEnable", "DHWCtrl.NicGetChipType", 
	"DHWCtrl.NicGetLinkStatus", "DHWCtrl.NicSend", "DHWCtrl.NicReceive", 
	"DHWCtrl.NicSetMAC", "DHWCtrl.ApspiSetSpeed", "DHWCtrl.ApspiEnable", 
	"DHWCtrl.ApspiSingleSend", "DHWCtrl.ApspiSingleRecv", 
	"DHWCtrl.ApspiAlternateSend", "DHWCtrl.ApspiAlternateRecv", 
	"DHWCtrl.PdiEnable", "DHWCtrl.PdiEraseDevice", "DHWCtrl.PdiReadFlash", 
	"DHWCtrl.PdiEraseFlashPage", "DHWCtrl.PdiWriteFlashPage", 
	"DHWCtrl.PdiProgramFlashPage", "DHWCtrl.PdiReadEeprom", 
	"DHWCtrl.PdiProgramEepromPage", "DHWCtrl.PdiReadFuses", 
	"DHWCtrl.PdiWriteFuse", "DHWCtrl.FlashGetPageSize", 
	"DHWCtrl.FlashErasePage", "DHWCtrl.FlashRead", "DHWCtrl.FlashWritePage", 
	"DHWCtrl.FlashProgramPage", "DHWCtrl.RegisterRead", 
	"DHWCtrl.RegisterWrite", "DHWCtrl.AesWrapKey", "DHWCtrl.AesEncrypt", 
	"DHWCtrl.AesDecrypt", "DHWCtrl.GetPlatformId2", "DHWCtrl.GetProdLoader", 
	"DHWCtrl.StartProdLoader", "DHWCtrl.GetStartupRun", "DHWCtrl.Run", 
	"DHWCtrl.InitBgm", "DHWCtrl.BgmExec", "DHWCtrl.Sm4x00BootloaderStart", 
	"DHWCtrl.Sm4x00EraseFlash", "DHWCtrl.Sm4x00WaitForFlashErase", 
	"DHWCtrl.Sm4x00ProgramBlock", "DHWCtrl.BgmRead", "Main.Bf2Upload", 
	"Main.SwitchFW", "Main.MatchPlatformId2", "Main.IsFirmwareUpToDate", 
	"Main.Bf3UploadStart", "Main.Bf3UploadContinue", "Dbg.ReadLogs", 
	"Dbg.RunCmd", 
};


static char * cc_urls[] = {
	"https://docs.baltech.de/refman/cmds/sys/getbuffersize.html", 
	"https://docs.baltech.de/refman/cmds/sys/hfreset.html", 
	"https://docs.baltech.de/refman/cmds/sys/reset.html", 
	"https://docs.baltech.de/refman/cmds/sys/getinfo.html", 
	"https://docs.baltech.de/refman/cmds/sys/getbootstatus.html", 
	"https://docs.baltech.de/refman/cmds/sys/getport.html", 
	"https://docs.baltech.de/refman/cmds/sys/setport.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfggetvalue.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfgsetvalue.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfgdelvalues.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfggetkeylist.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfggetvaluelist.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfgwritetlvsector.html", 
	"https://docs.baltech.de/refman/cmds/sys/configport.html", 
	"https://docs.baltech.de/refman/cmds/sys/setregister.html", 
	"https://docs.baltech.de/refman/cmds/sys/getregister.html", 
	"https://docs.baltech.de/refman/cmds/sys/powerdown.html", 
	"https://docs.baltech.de/refman/cmds/sys/selectprotocol.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfgcheck.html", 
	"https://docs.baltech.de/refman/cmds/sys/setcommparam.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfgloadblock.html", 
	"https://docs.baltech.de/refman/cmds/sys/getplatformid.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfgreset.html", 
	"https://docs.baltech.de/refman/cmds/sys/stopprotocol.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfggetid.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfggetdevicesettingsid.html", 
	"https://docs.baltech.de/refman/cmds/sys/factoryresetlegacy.html", 
	"https://docs.baltech.de/refman/cmds/sys/getstatistics.html", 
	"https://docs.baltech.de/refman/cmds/sys/getfeatures.html", 
	"https://docs.baltech.de/refman/cmds/sys/getpartnumber.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfgloadprepare.html", 
	"https://docs.baltech.de/refman/cmds/sys/cfgloadfinish.html", 
	"https://docs.baltech.de/refman/cmds/sys/factoryreset.html", 
	"https://docs.baltech.de/refman/cmds/sys/getlicenses.html", 
	"https://docs.baltech.de/refman/cmds/sys/getfwcrc.html", 
	"https://docs.baltech.de/refman/cmds/vhl/select.html", 
	"https://docs.baltech.de/refman/cmds/vhl/getsnr.html", 
	"https://docs.baltech.de/refman/cmds/vhl/read.html", 
	"https://docs.baltech.de/refman/cmds/vhl/write.html", 
	"https://docs.baltech.de/refman/cmds/vhl/isselected.html", 
	"https://docs.baltech.de/refman/cmds/vhl/getlegacyatr.html", 
	"https://docs.baltech.de/refman/cmds/vhl/exchangeapdu.html", 
	"https://docs.baltech.de/refman/cmds/vhl/setup.html", 
	"https://docs.baltech.de/refman/cmds/vhl/setupmifare.html", 
	"https://docs.baltech.de/refman/cmds/vhl/setuplegic.html", 
	"https://docs.baltech.de/refman/cmds/vhl/setupiso15.html", 
	"https://docs.baltech.de/refman/cmds/vhl/checkreconfigerr.html", 
	"https://docs.baltech.de/refman/cmds/vhl/exchangelongapdu.html", 
	"https://docs.baltech.de/refman/cmds/vhl/getfileinfo.html", 
	"https://docs.baltech.de/refman/cmds/vhl/getatr.html", 
	"https://docs.baltech.de/refman/cmds/vhl/format.html", 
	"https://docs.baltech.de/refman/cmds/vhl/resolvefilename.html", 
	"https://docs.baltech.de/refman/cmds/crypto/encryptblock.html", 
	"https://docs.baltech.de/refman/cmds/crypto/decryptblock.html", 
	"https://docs.baltech.de/refman/cmds/crypto/encryptbuffer.html", 
	"https://docs.baltech.de/refman/cmds/crypto/decryptbuffer.html", 
	"https://docs.baltech.de/refman/cmds/crypto/balkeyencryptbuffer.html", 
	"https://docs.baltech.de/refman/cmds/crypto/getkeysig.html", 
	"https://docs.baltech.de/refman/cmds/crypto/copyconfigkey.html", 
	"https://docs.baltech.de/refman/cmds/ftob/openreadfile.html", 
	"https://docs.baltech.de/refman/cmds/ftob/openwritefile.html", 
	"https://docs.baltech.de/refman/cmds/ftob/readfileblock.html", 
	"https://docs.baltech.de/refman/cmds/ftob/writefileblock.html", 
	"https://docs.baltech.de/refman/cmds/ftob/closefile.html", 
	"https://docs.baltech.de/refman/cmds/rtc/gettime.html", 
	"https://docs.baltech.de/refman/cmds/rtc/settime.html", 
	"https://docs.baltech.de/refman/cmds/ar/setmode.html", 
	"https://docs.baltech.de/refman/cmds/ar/getmessage.html", 
	"https://docs.baltech.de/refman/cmds/ar/runscript.html", 
	"https://docs.baltech.de/refman/cmds/sec/getacmask.html", 
	"https://docs.baltech.de/refman/cmds/sec/setacmask.html", 
	"https://docs.baltech.de/refman/cmds/sec/setkey.html", 
	"https://docs.baltech.de/refman/cmds/sec/authphase1.html", 
	"https://docs.baltech.de/refman/cmds/sec/authphase2.html", 
	"https://docs.baltech.de/refman/cmds/sec/tunnel.html", 
	"https://docs.baltech.de/refman/cmds/sec/reset.html", 
	"https://docs.baltech.de/refman/cmds/sec/lockreset.html", 
	"https://docs.baltech.de/refman/cmds/sec/getcuracmask.html", 
	"https://docs.baltech.de/refman/cmds/i2c/setspeed.html", 
	"https://docs.baltech.de/refman/cmds/i2c/read.html", 
	"https://docs.baltech.de/refman/cmds/i2c/write.html", 
	"https://docs.baltech.de/refman/cmds/i2c/txrx.html", 
	"https://docs.baltech.de/refman/cmds/pki/pfsgenkey.html", 
	"https://docs.baltech.de/refman/cmds/pki/pfsauthhostcert.html", 
	"https://docs.baltech.de/refman/cmds/pki/pfsauthrdrcert.html", 
	"https://docs.baltech.de/refman/cmds/pki/tunnel2.html", 
	"https://docs.baltech.de/refman/cmds/pki/getx509csr.html", 
	"https://docs.baltech.de/refman/cmds/pki/storex509cert.html", 
	"https://docs.baltech.de/refman/cmds/pki/storex509rootcert.html", 
	"https://docs.baltech.de/refman/cmds/ui/enable.html", 
	"https://docs.baltech.de/refman/cmds/ui/disable.html", 
	"https://docs.baltech.de/refman/cmds/ui/toggle.html", 
	"https://docs.baltech.de/refman/cmds/ui/setrgbled.html", 
	"https://docs.baltech.de/refman/cmds/ui/pulsergbled.html", 
	"https://docs.baltech.de/refman/cmds/lic/getlicenses.html", 
	"https://docs.baltech.de/refman/cmds/lic/readliccard.html", 
	"https://docs.baltech.de/refman/cmds/mif/loadkey.html", 
	"https://docs.baltech.de/refman/cmds/mif/request.html", 
	"https://docs.baltech.de/refman/cmds/mif/anticoll.html", 
	"https://docs.baltech.de/refman/cmds/mif/select.html", 
	"https://docs.baltech.de/refman/cmds/mif/authe2.html", 
	"https://docs.baltech.de/refman/cmds/mif/authuser.html", 
	"https://docs.baltech.de/refman/cmds/mif/read.html", 
	"https://docs.baltech.de/refman/cmds/mif/write.html", 
	"https://docs.baltech.de/refman/cmds/mif/changevalue.html", 
	"https://docs.baltech.de/refman/cmds/mif/changevaluebackup.html", 
	"https://docs.baltech.de/refman/cmds/mif/transferblock.html", 
	"https://docs.baltech.de/refman/cmds/mif/halt.html", 
	"https://docs.baltech.de/refman/cmds/mif/authe2extended.html", 
	"https://docs.baltech.de/refman/cmds/mif/authuserextended.html", 
	"https://docs.baltech.de/refman/cmds/mif/resetauth.html", 
	"https://docs.baltech.de/refman/cmds/mif/readsl3.html", 
	"https://docs.baltech.de/refman/cmds/mif/writesl3.html", 
	"https://docs.baltech.de/refman/cmds/mif/changeaeskey.html", 
	"https://docs.baltech.de/refman/cmds/mif/valuesl3.html", 
	"https://docs.baltech.de/refman/cmds/mif/proxcheck.html", 
	"https://docs.baltech.de/refman/cmds/mif/getcardversion.html", 
	"https://docs.baltech.de/refman/cmds/mif/readsig.html", 
	"https://docs.baltech.de/refman/cmds/mif/virtualcardselect.html", 
	"https://docs.baltech.de/refman/cmds/mif/sectorswitch.html", 
	"https://docs.baltech.de/refman/cmds/mif/setframing.html", 
	"https://docs.baltech.de/refman/cmds/mif/commitreaderid.html", 
	"https://docs.baltech.de/refman/cmds/lg/select.html", 
	"https://docs.baltech.de/refman/cmds/lg/idle.html", 
	"https://docs.baltech.de/refman/cmds/lg/gensetread.html", 
	"https://docs.baltech.de/refman/cmds/lg/gensetdelete.html", 
	"https://docs.baltech.de/refman/cmds/lg/readmim.html", 
	"https://docs.baltech.de/refman/cmds/lg/readmimcrc.html", 
	"https://docs.baltech.de/refman/cmds/lg/writemim.html", 
	"https://docs.baltech.de/refman/cmds/lg/writemimcrc.html", 
	"https://docs.baltech.de/refman/cmds/lg/makemimcrc.html", 
	"https://docs.baltech.de/refman/cmds/lg/readsmstatus.html", 
	"https://docs.baltech.de/refman/cmds/lg/setpassword.html", 
	"https://docs.baltech.de/refman/cmds/lg/lock.html", 
	"https://docs.baltech.de/refman/cmds/lg/unlock.html", 
	"https://docs.baltech.de/refman/cmds/lga/transparentcommand.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/requestlegacy.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/select.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/halt.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/requestats.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/performpps.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/request.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/anticoll.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/selectonly.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/transparentcmd.html", 
	"https://docs.baltech.de/refman/cmds/iso14a/transparentcmdbitlen.html", 
	"https://docs.baltech.de/refman/cmds/iso14b/request.html", 
	"https://docs.baltech.de/refman/cmds/iso14b/attrib.html", 
	"https://docs.baltech.de/refman/cmds/iso14b/halt.html", 
	"https://docs.baltech.de/refman/cmds/iso14b/transparentcmd.html", 
	"https://docs.baltech.de/refman/cmds/iso14b/settransparentsettings.html", 
	"https://docs.baltech.de/refman/cmds/iso14b/gettransparentsettings.html", 
	"https://docs.baltech.de/refman/cmds/iso14l4/setupapdu.html", 
	"https://docs.baltech.de/refman/cmds/iso14l4/exchangeapdu.html", 
	"https://docs.baltech.de/refman/cmds/iso14l4/deselect.html", 
	"https://docs.baltech.de/refman/cmds/pico/sethfmode.html", 
	"https://docs.baltech.de/refman/cmds/pico/requestanticoll.html", 
	"https://docs.baltech.de/refman/cmds/pico/select.html", 
	"https://docs.baltech.de/refman/cmds/pico/halt.html", 
	"https://docs.baltech.de/refman/cmds/pico/selectbookpage.html", 
	"https://docs.baltech.de/refman/cmds/pico/authenticate.html", 
	"https://docs.baltech.de/refman/cmds/pico/read.html", 
	"https://docs.baltech.de/refman/cmds/pico/write.html", 
	"https://docs.baltech.de/refman/cmds/desfire/execcommand.html", 
	"https://docs.baltech.de/refman/cmds/desfire/authenticate.html", 
	"https://docs.baltech.de/refman/cmds/desfire/authextkey.html", 
	"https://docs.baltech.de/refman/cmds/desfire/selectapplication.html", 
	"https://docs.baltech.de/refman/cmds/desfire/readdata.html", 
	"https://docs.baltech.de/refman/cmds/desfire/writedata.html", 
	"https://docs.baltech.de/refman/cmds/desfire/changeextkey.html", 
	"https://docs.baltech.de/refman/cmds/desfire/changekey.html", 
	"https://docs.baltech.de/refman/cmds/desfire/createdam.html", 
	"https://docs.baltech.de/refman/cmds/desfire/getoriginalitysignature.html", 
	"https://docs.baltech.de/refman/cmds/desfire/virtualcardselect.html", 
	"https://docs.baltech.de/refman/cmds/desfire/proxcheck.html", 
	"https://docs.baltech.de/refman/cmds/desfire/getdfnames.html", 
	"https://docs.baltech.de/refman/cmds/desfire/setframing.html", 
	"https://docs.baltech.de/refman/cmds/desfire/resetauthentication.html", 
	"https://docs.baltech.de/refman/cmds/felica/request.html", 
	"https://docs.baltech.de/refman/cmds/felica/setuid2.html", 
	"https://docs.baltech.de/refman/cmds/felica/genericcmd.html", 
	"https://docs.baltech.de/refman/cmds/legic/transparentcommand4000.html", 
	"https://docs.baltech.de/refman/cmds/iso15/setparam.html", 
	"https://docs.baltech.de/refman/cmds/iso15/getparam.html", 
	"https://docs.baltech.de/refman/cmds/iso15/getuidlist.html", 
	"https://docs.baltech.de/refman/cmds/iso15/setmode.html", 
	"https://docs.baltech.de/refman/cmds/iso15/stayquiet.html", 
	"https://docs.baltech.de/refman/cmds/iso15/readblock.html", 
	"https://docs.baltech.de/refman/cmds/iso15/writeblock.html", 
	"https://docs.baltech.de/refman/cmds/iso15/lockblock.html", 
	"https://docs.baltech.de/refman/cmds/iso15/resettoready.html", 
	"https://docs.baltech.de/refman/cmds/iso15/writeafi.html", 
	"https://docs.baltech.de/refman/cmds/iso15/lockafi.html", 
	"https://docs.baltech.de/refman/cmds/iso15/writedsfid.html", 
	"https://docs.baltech.de/refman/cmds/iso15/lockdsfid.html", 
	"https://docs.baltech.de/refman/cmds/iso15/getsysteminformation.html", 
	"https://docs.baltech.de/refman/cmds/iso15/getsecuritystatus.html", 
	"https://docs.baltech.de/refman/cmds/iso15/customcommand.html", 
	"https://docs.baltech.de/refman/cmds/iso15/readsingleblock.html", 
	"https://docs.baltech.de/refman/cmds/iso15/writesingleblock.html", 
	"https://docs.baltech.de/refman/cmds/iso15/transparentcmdlegacy.html", 
	"https://docs.baltech.de/refman/cmds/iso15/writemultipleblocks.html", 
	"https://docs.baltech.de/refman/cmds/iso15/readmultipleblocks.html", 
	"https://docs.baltech.de/refman/cmds/iso15/transparentcmd.html", 
	"https://docs.baltech.de/refman/cmds/epcuid/uidreplyround.html", 
	"https://docs.baltech.de/refman/cmds/epcuid/uidwrite.html", 
	"https://docs.baltech.de/refman/cmds/epcuid/uiddestroy.html", 
	"https://docs.baltech.de/refman/cmds/epcuid/epcsetmode.html", 
	"https://docs.baltech.de/refman/cmds/epcuid/epcselect.html", 
	"https://docs.baltech.de/refman/cmds/epcuid/epcinventory.html", 
	"https://docs.baltech.de/refman/cmds/srix/select.html", 
	"https://docs.baltech.de/refman/cmds/srix/read.html", 
	"https://docs.baltech.de/refman/cmds/srix/write.html", 
	"https://docs.baltech.de/refman/cmds/ultralight/execcmd.html", 
	"https://docs.baltech.de/refman/cmds/ultralight/read.html", 
	"https://docs.baltech.de/refman/cmds/ultralight/write.html", 
	"https://docs.baltech.de/refman/cmds/ultralight/authe2.html", 
	"https://docs.baltech.de/refman/cmds/ultralight/authuser.html", 
	"https://docs.baltech.de/refman/cmds/hitag/request.html", 
	"https://docs.baltech.de/refman/cmds/hitag/select.html", 
	"https://docs.baltech.de/refman/cmds/hitag/halt.html", 
	"https://docs.baltech.de/refman/cmds/hitag/read.html", 
	"https://docs.baltech.de/refman/cmds/hitag/write.html", 
	"https://docs.baltech.de/refman/cmds/hitag/personalisehtg.html", 
	"https://docs.baltech.de/refman/cmds/em/decodecfg.html", 
	"https://docs.baltech.de/refman/cmds/em/read4100.html", 
	"https://docs.baltech.de/refman/cmds/em/read4205.html", 
	"https://docs.baltech.de/refman/cmds/em/write4205.html", 
	"https://docs.baltech.de/refman/cmds/em/halt4205.html", 
	"https://docs.baltech.de/refman/cmds/em/login4205.html", 
	"https://docs.baltech.de/refman/cmds/em/protect4205.html", 
	"https://docs.baltech.de/refman/cmds/em/read4469.html", 
	"https://docs.baltech.de/refman/cmds/em/write4469.html", 
	"https://docs.baltech.de/refman/cmds/em/halt4469.html", 
	"https://docs.baltech.de/refman/cmds/em/login4469.html", 
	"https://docs.baltech.de/refman/cmds/em/read4450.html", 
	"https://docs.baltech.de/refman/cmds/hid/indalaread.html", 
	"https://docs.baltech.de/refman/cmds/hid/proxread.html", 
	"https://docs.baltech.de/refman/cmds/hid/awidread.html", 
	"https://docs.baltech.de/refman/cmds/hid/ioproxread.html", 
	"https://docs.baltech.de/refman/cmds/hid/prox32read.html", 
	"https://docs.baltech.de/refman/cmds/hid/pyramidread.html", 
	"https://docs.baltech.de/refman/cmds/hid/indalasecureread.html", 
	"https://docs.baltech.de/refman/cmds/hid/idteckread.html", 
	"https://docs.baltech.de/refman/cmds/ttf/readbytestream.html", 
	"https://docs.baltech.de/refman/cmds/ttf/idteckread.html", 
	"https://docs.baltech.de/refman/cmds/qkey/read.html", 
	"https://docs.baltech.de/refman/cmds/ask/securakeyread.html", 
	"https://docs.baltech.de/refman/cmds/ask/gproxread.html", 
	"https://docs.baltech.de/refman/cmds/ask/cotagread.html", 
	"https://docs.baltech.de/refman/cmds/iso78/selectslot.html", 
	"https://docs.baltech.de/refman/cmds/iso78/opensamlegacy.html", 
	"https://docs.baltech.de/refman/cmds/iso78/closesamlegacy.html", 
	"https://docs.baltech.de/refman/cmds/iso78/exchangeapdulegacy.html", 
	"https://docs.baltech.de/refman/cmds/iso78/opensam.html", 
	"https://docs.baltech.de/refman/cmds/iso78/closesam.html", 
	"https://docs.baltech.de/refman/cmds/iso78/exchangeapdu.html", 
	"https://docs.baltech.de/refman/cmds/disp/enable.html", 
	"https://docs.baltech.de/refman/cmds/disp/setcontrast.html", 
	"https://docs.baltech.de/refman/cmds/disp/enablebacklight.html", 
	"https://docs.baltech.de/refman/cmds/disp/clear.html", 
	"https://docs.baltech.de/refman/cmds/disp/load.html", 
	"https://docs.baltech.de/refman/cmds/disp/extend.html", 
	"https://docs.baltech.de/refman/cmds/keyboard/exist.html", 
	"https://docs.baltech.de/refman/cmds/keyboard/currentkey.html", 
	"https://docs.baltech.de/refman/cmds/keyboard/enablewakeup.html", 
	"https://docs.baltech.de/refman/cmds/keyboard/waitforkey.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/enable.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/isconnected.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/setuppipes.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/setaddr.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/reset.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/transrawsetup.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/transsetupin.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/transsetupout.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/transin.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/transout.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/suspend.html", 
	"https://docs.baltech.de/refman/cmds/usbhost/resume.html", 
	"https://docs.baltech.de/refman/cmds/eth/getmacadr.html", 
	"https://docs.baltech.de/refman/cmds/eth/getconndevip.html", 
	"https://docs.baltech.de/refman/cmds/eth/createrecoverypoint.html", 
	"https://docs.baltech.de/refman/cmds/eth/delrecoverypoint.html", 
	"https://docs.baltech.de/refman/cmds/eth/getnetworkstatus.html", 
	"https://docs.baltech.de/refman/cmds/eth/getmibcounters.html", 
	"https://docs.baltech.de/refman/cmds/eth/gettcpconnectionstatus.html", 
	"https://docs.baltech.de/refman/cmds/eth/opentcpconnection.html", 
	"https://docs.baltech.de/refman/cmds/eth/closetcpconnection.html", 
	"https://docs.baltech.de/refman/cmds/bat/run.html", 
	"https://docs.baltech.de/refman/cmds/bat/checkstatus.html", 
	"https://docs.baltech.de/refman/cmds/bat/checkany.html", 
	"https://docs.baltech.de/refman/cmds/bat/checktemplate.html", 
	"https://docs.baltech.de/refman/cmds/bat/delay.html", 
	"https://docs.baltech.de/refman/cmds/cardemu/getmaxframesize.html", 
	"https://docs.baltech.de/refman/cmds/cardemu/startemu.html", 
	"https://docs.baltech.de/refman/cmds/cardemu/transparentcmd.html", 
	"https://docs.baltech.de/refman/cmds/cardemu/getexternalhfstatus.html", 
	"https://docs.baltech.de/refman/cmds/cardemu/startnfc.html", 
	"https://docs.baltech.de/refman/cmds/i4ce/startemu.html", 
	"https://docs.baltech.de/refman/cmds/i4ce/exchangeinverseapdu.html", 
	"https://docs.baltech.de/refman/cmds/i4ce/extendwaitingtime.html", 
	"https://docs.baltech.de/refman/cmds/i4ce/getexternalhfstatus.html", 
	"https://docs.baltech.de/refman/cmds/flashfs/getmemoryinfo.html", 
	"https://docs.baltech.de/refman/cmds/flashfs/format.html", 
	"https://docs.baltech.de/refman/cmds/flashfs/createfile.html", 
	"https://docs.baltech.de/refman/cmds/flashfs/deletefile.html", 
	"https://docs.baltech.de/refman/cmds/flashfs/renamefile.html", 
	"https://docs.baltech.de/refman/cmds/flashfs/getrecordsize.html", 
	"https://docs.baltech.de/refman/cmds/flashfs/getfilesize.html", 
	"https://docs.baltech.de/refman/cmds/flashfs/readrecords.html", 
	"https://docs.baltech.de/refman/cmds/flashfs/writerecords.html", 
	"https://docs.baltech.de/refman/cmds/iso14ce/activatecardapdu.html", 
	"https://docs.baltech.de/refman/cmds/iso14ce/exchangecardapdu.html", 
	"https://docs.baltech.de/refman/cmds/iso14ce/extendwaitingtime.html", 
	"https://docs.baltech.de/refman/cmds/iso14ce/getexternalhfstatus.html", 
	"https://docs.baltech.de/refman/cmds/bleperiph/defineservice.html", 
	"https://docs.baltech.de/refman/cmds/bleperiph/enable.html", 
	"https://docs.baltech.de/refman/cmds/bleperiph/setdevicename.html", 
	"https://docs.baltech.de/refman/cmds/bleperiph/setcharacteristic.html", 
	"https://docs.baltech.de/refman/cmds/bleperiph/getcharacteristic.html", 
	"https://docs.baltech.de/refman/cmds/bleperiph/getevents.html", 
	"https://docs.baltech.de/refman/cmds/bleperiph/getrssi.html", 
	"https://docs.baltech.de/refman/cmds/mobileid/enable.html", 
	"https://docs.baltech.de/refman/cmds/mobileid/setup.html", 
	"https://docs.baltech.de/refman/cmds/mobileid/getvirtualcredentialid.html", 
	"https://docs.baltech.de/refman/cmds/mce/enable.html", 
	"https://docs.baltech.de/refman/cmds/mce/request.html", 
	"https://docs.baltech.de/refman/cmds/lt/getbootstatus.html", 
	"https://docs.baltech.de/refman/cmds/lt/reset.html", 
	"https://docs.baltech.de/refman/cmds/lt/request.html", 
	"https://docs.baltech.de/refman/cmds/lt/anticoll.html", 
	"https://docs.baltech.de/refman/cmds/lt/select.html", 
	"https://docs.baltech.de/refman/cmds/lt/halt.html", 
	"https://docs.baltech.de/refman/cmds/lt/hfreset.html", 
	"https://docs.baltech.de/refman/cmds/lt/getinfo.html", 
	"https://docs.baltech.de/refman/cmds/lt/highspeedwriteblock.html", 
	"https://docs.baltech.de/refman/cmds/lt/continousreadblocks.html", 
	"https://docs.baltech.de/refman/cmds/lt/readblock.html", 
	"https://docs.baltech.de/refman/cmds/lt/writeblock.html", 
	"https://docs.baltech.de/refman/cmds/lt/readword.html", 
	"https://docs.baltech.de/refman/cmds/lt/writeword.html", 
	"https://docs.baltech.de/refman/cmds/lt/writefile.html", 
	"https://docs.baltech.de/refman/cmds/lt/test.html", 
	"https://docs.baltech.de/refman/cmds/lt/readmultipleblocks.html", 
	"https://docs.baltech.de/refman/cmds/lt/fastwriteblock.html", 
	"https://docs.baltech.de/refman/cmds/lt/fastwriteword.html", 
	"https://docs.baltech.de/refman/cmds/lt/transparentcmd.html", 
	"https://docs.baltech.de/refman/cmds/lt/setreturnlink.html", 
	"https://docs.baltech.de/refman/cmds/lt/readblockextended.html", 
	"https://docs.baltech.de/refman/cmds/lt/writeblockextended.html", 
	"https://docs.baltech.de/refman/cmds/lt/readwordextended.html", 
	"https://docs.baltech.de/refman/cmds/lt/writewordextended.html", 
	"https://docs.baltech.de/refman/cmds/lt/readmultipleblocksextended.html", 
	"https://docs.baltech.de/refman/cmds/lt/fastwritewordextended.html", 
	"https://docs.baltech.de/refman/cmds/lt/continousreadblocksextended.html", 
	"https://docs.baltech.de/refman/cmds/lt/highspeedwriteblockextended.html", 
	"https://docs.baltech.de/refman/cmds/ulrdr/sendauth1.html", 
	"https://docs.baltech.de/refman/cmds/ulrdr/recvauth1.html", 
	"https://docs.baltech.de/refman/cmds/ulrdr/sendauth2.html", 
	"https://docs.baltech.de/refman/cmds/ulrdr/recvauth2.html", 
	"https://docs.baltech.de/refman/cmds/ulrdr/sendencryptedcmd.html", 
	"https://docs.baltech.de/refman/cmds/ulrdr/recvencryptedcmd.html", 
	"https://docs.baltech.de/refman/cmds/msgqueue/getmsgsize.html", 
	"https://docs.baltech.de/refman/cmds/msgqueue/receive.html", 
	"https://docs.baltech.de/refman/cmds/msgqueue/send.html", 
	"https://docs.baltech.de/refman/cmds/msgqueue/sendreceive.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/portconfig.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/portget.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/portset.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/setbaudrate.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/sramtest.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/portwait.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/getresetcause.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/aportmeasure.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/mirrordata.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/dispenable.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/dispbacklight.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/dispcolor.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/dispcontrast.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/dispbox.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/ser2ctrl.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/ser2writeread.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/delay1ms.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/delay10us.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/powermgrsuspend.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/scanmatrix.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/getreaderchiptype.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/selectantenna.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/getsamtype.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/hfacquire.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/ser2flush.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/eepromwrite.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/dataflashgetsize.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/dataflasherasepages.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/dataflashread.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/dataflashwrite.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/eepromread.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/securityandconfigreset.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pulsegenerate.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initser2.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initrtc.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initlcddrv.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initrc.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initmf.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initiso14a.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initiso14b.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initiso15.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initlg.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initlga.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initdf.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initrc125.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initcc.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initusbhost.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initnic.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/bohenable.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/nicenable.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/nicgetchiptype.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/nicgetlinkstatus.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/nicsend.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/nicreceive.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/nicsetmac.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/apspisetspeed.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/apspienable.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/apspisinglesend.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/apspisinglerecv.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/apspialternatesend.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/apspialternaterecv.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdienable.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdierasedevice.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdireadflash.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdieraseflashpage.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdiwriteflashpage.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdiprogramflashpage.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdireadeeprom.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdiprogrameeprompage.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdireadfuses.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/pdiwritefuse.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/flashgetpagesize.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/flasherasepage.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/flashread.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/flashwritepage.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/flashprogrampage.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/registerread.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/registerwrite.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/aeswrapkey.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/aesencrypt.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/aesdecrypt.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/getplatformid2.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/getprodloader.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/startprodloader.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/getstartuprun.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/run.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/initbgm.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/bgmexec.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/sm4x00bootloaderstart.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/sm4x00eraseflash.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/sm4x00waitforflasherase.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/sm4x00programblock.html", 
	"https://docs.baltech.de/refman/cmds/dhwctrl/bgmread.html", 
	"https://docs.baltech.de/refman/cmds/main/bf2upload.html", 
	"https://docs.baltech.de/refman/cmds/main/switchfw.html", 
	"https://docs.baltech.de/refman/cmds/main/matchplatformid2.html", 
	"https://docs.baltech.de/refman/cmds/main/isfirmwareuptodate.html", 
	"https://docs.baltech.de/refman/cmds/main/bf3uploadstart.html", 
	"https://docs.baltech.de/refman/cmds/main/bf3uploadcontinue.html", 
	"https://docs.baltech.de/refman/cmds/dbg/readlogs.html", 
	"https://docs.baltech.de/refman/cmds/dbg/runcmd.html", 
};
